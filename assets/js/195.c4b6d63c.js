(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{511:function(s,a,e){"use strict";e.r(a);var n=e(17),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"比较运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[s._v("#")]),s._v(" 比较运算符")]),s._v(" "),e("h2",{attrs:{id:"比较运算符汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符汇总"}},[s._v("#")]),s._v(" 比较运算符汇总")]),s._v(" "),e("ul",[e("li",[e("code",[s._v(">")]),s._v(" 大于运算符")]),s._v(" "),e("li",[e("code",[s._v("<")]),s._v(" 小于运算符")]),s._v(" "),e("li",[e("code",[s._v("<=")]),s._v(" 小于或等于运算符")]),s._v(" "),e("li",[e("code",[s._v(">=")]),s._v(" 大于或等于运算符")]),s._v(" "),e("li",[e("code",[s._v("==")]),s._v(" 相等运算符")]),s._v(" "),e("li",[e("code",[s._v("===")]),s._v(" 严格相等运算符")]),s._v(" "),e("li",[e("code",[s._v("!=")]),s._v(" 不相等运算符")]),s._v(" "),e("li",[e("code",[s._v("!==")]),s._v(" 严格不相等运算符")])]),s._v(" "),e("h2",{attrs:{id:"非相等比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非相等比较"}},[s._v("#")]),s._v(" 非相等比较")]),s._v(" "),e("h3",{attrs:{id:"_1-字符串类型比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符串类型比较"}},[s._v("#")]),s._v(" 1. 字符串类型比较")]),s._v(" "),e("p",[s._v("字符串按照字典顺序进行比较。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("'cat' > 'dog' // false\n'cat' > 'catalog' // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("JavaScript 引擎内部首先比较"),e("code",[s._v("首字符")]),s._v("的 Unicode 码点。如果相等，再比较第二个字符的 Unicode 码点，以此类推。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var str = '天气';\nalert( str.charCodeAt(0) );\n//22825\n\nalert( String.fromCharCode(22825, 27668) );\n//天气\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("以上是字符串和Unicode编码互相转换的方式。")]),s._v(" "),e("h3",{attrs:{id:"_2-原始数据类型比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-原始数据类型比较"}},[s._v("#")]),s._v(" 2. 原始数据类型比较")]),s._v(" "),e("p",[s._v("如果两个运算子都是原始类型的值，则是先转成数值再比较。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("5 > '4' // true\n// 等同于 5 > Number('4')\n// 即 5 > 4\n\ntrue > false // true\n// 等同于 Number(true) > Number(false)\n// 即 1 > 0\n\n2 > true // true\n// 等同于 2 > Number(true)\n// 即 2 > 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("这里需要注意与NaN的比较。任何值（包括NaN本身）与NaN比较，返回的都是false。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1 > NaN // false\n1 <= NaN // false\n'1' > NaN // false\n'1' <= NaN // false\nNaN > NaN // false\nNaN <= NaN // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"_3-复合数据类型-对象-比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-复合数据类型-对象-比较"}},[s._v("#")]),s._v(" 3. 复合数据类型（对象）比较")]),s._v(" "),e("p",[s._v("对象转换成原始类型的值，算法是先调用valueOf方法；如果返回的还是对象，再接着调用toString方法。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var x = [2];\nx > '11' // true\n// 等同于 [2].valueOf().toString() > '11'\n// 即 '2' > '11'\n\nx.valueOf = function () { return '1' };\nx > '11' // false\n// 等同于 [2].valueOf() > '11'\n// 即 '1' > '11'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[2] > [1] // true\n// 等同于 [2].valueOf().toString() > [1].valueOf().toString()\n// 即 '2' > '1'\n\n[2] > [11] // true\n// 等同于 [2].valueOf().toString() > [11].valueOf().toString()\n// 即 '2' > '11'\n\n{ x: 2 } >= { x: 1 } // true\n// 等同于 { x: 2 }.valueOf().toString() >= { x: 1 }.valueOf().toString()\n// 即 '[object Object]' >= '[object Object]'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"相等-严格-比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相等-严格-比较"}},[s._v("#")]),s._v(" 相等（严格）比较")]),s._v(" "),e("h3",{attrs:{id:"_1-严格相等"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-严格相等"}},[s._v("#")]),s._v(" 1. 严格相等")]),s._v(" "),e("p",[s._v("如果两个值的类型不同，直接返回false。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('1 === "1" // false\ntrue === "true" // false\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("同一类型的原始类型的值（数值、字符串、布尔值）比较时，值相同就返回true，值不同就返回false。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1 === 0x1 // true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("NaN与任何值都不相等（包括自身）。另外，正0等于负0。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("NaN === NaN  // false\n+0 === -0 // true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("两个复合类型（对象、数组、函数）的数据比较时，不是比较它们的值是否相等，而是比较它们是否指向同一个地址。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("{} === {} // false\n[] === [] // false\n(function () {} === function () {}) // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("对于两个对象的比较，严格相等运算符比较的是地址，而大于或小于运算符比较的是值。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var v1 = {};\nvar v2 = v1;\nv1 === v2 // true\n\nvar obj1 = {};\nvar obj2 = {};\n\nobj1 > obj2 // false\nobj1 < obj2 // false\nobj1 === obj2 // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("undefined和null与自身严格相等。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("undefined === undefined // true\nnull === null // true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var v1;\nvar v2;\nv1 === v2 // true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"_2-严格不相等"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-严格不相等"}},[s._v("#")]),s._v(" 2. 严格不相等")]),s._v(" "),e("p",[s._v("严格相等运算符有一个对应的“严格不相等运算符”（!==），它的算法就是先求严格相等运算符的结果，然后返回相反值。")]),s._v(" "),e("div",{staticClass:"language-bj line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1 !== '1' // true\n// 等同于\n!(1 === '1')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);