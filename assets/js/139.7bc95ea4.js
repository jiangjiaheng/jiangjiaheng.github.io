(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{464:function(e,t,n){"use strict";n.r(t);var a=n(17),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"document-节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#document-节点"}},[e._v("#")]),e._v(" Document 节点")]),e._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),n("p",[n("code",[e._v("document")]),e._v("节点对象代表整个文档，每张网页都有自己的"),n("code",[e._v("document")]),e._v("对象。"),n("code",[e._v("window.document")]),e._v("属性就指向这个对象。只要浏览器开始载入 "),n("code",[e._v("HTML")]),e._v(" 文档，该对象就存在了，可以直接使用。")]),e._v(" "),n("p",[e._v("document对象有不同的办法可以获取。")]),e._v(" "),n("ul",[n("li",[e._v("正常的网页，直接使用document或window.document。")]),e._v(" "),n("li",[e._v("iframe框架里面的网页，使用iframe节点的contentDocument属性。")]),e._v(" "),n("li",[e._v("Ajax 操作返回的文档，使用XMLHttpRequest对象的responseXML属性。")]),e._v(" "),n("li",[e._v("内部节点的ownerDocument属性。")])]),e._v(" "),n("p",[e._v("document对象继承了EventTarget接口、Node接口、ParentNode接口。这意味着，这些接口的方法都可以在document对象上调用。除此之外，document对象还有很多自己的属性和方法。")]),e._v(" "),n("h2",{attrs:{id:"属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),n("h3",{attrs:{id:"_1-快捷方式属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-快捷方式属性"}},[e._v("#")]),e._v(" 1. 快捷方式属性")]),e._v(" "),n("p",[e._v("以下属性是指向文档内部的某个节点的快捷方式。")]),e._v(" "),n("h4",{attrs:{id:"_1-document-defaultview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-document-defaultview"}},[e._v("#")]),e._v(" 1. document.defaultView")]),e._v(" "),n("p",[e._v("document.defaultView属性返回document对象所属的window对象。如果当前文档不属于window对象，该属性返回null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.defaultView === window // true\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h4",{attrs:{id:"_2-document-doctype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-document-doctype"}},[e._v("#")]),e._v(" 2. document.doctype")]),e._v(" "),n("p",[e._v("对于 HTML 文档来说，document对象一般有两个子节点。第一个子节点是document.doctype，指向"),n("code",[e._v("<DOCTYPE>")]),e._v("节点，即文档类型（Document Type Declaration，简写DTD）节点。HTML 的文档类型节点，一般写成"),n("code",[e._v("<!DOCTYPE html>")]),e._v("。如果网页没有声明 DTD，该属性返回null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('var doctype = document.doctype;\ndoctype // "<!DOCTYPE html>"\ndoctype.name // "html"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[n("code",[e._v("document.firstChild")]),e._v("通常就返回这个节点。")]),e._v(" "),n("h4",{attrs:{id:"_3-document-documentelement"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-document-documentelement"}},[e._v("#")]),e._v(" 3. document.documentElement")]),e._v(" "),n("p",[n("code",[e._v("document.documentElement")]),e._v("属性返回当前文档的根元素节点（"),n("code",[e._v("root")]),e._v("）。它通常是"),n("code",[e._v("document")]),e._v("节点的第二个子节点，紧跟在"),n("code",[e._v("document.doctype")]),e._v("节点后面。HTML网页的该属性，一般是"),n("code",[e._v("<html>")]),e._v("节点。")]),e._v(" "),n("h4",{attrs:{id:"_4-document-body-document-head"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-document-body-document-head"}},[e._v("#")]),e._v(" 4. document.body，document.head")]),e._v(" "),n("p",[e._v("document.body属性指向"),n("code",[e._v("<body>")]),e._v("节点，document.head属性指向"),n("code",[e._v("<head>")]),e._v("节点。")]),e._v(" "),n("p",[e._v("这两个属性总是存在的，如果网页源码里面省略了"),n("code",[e._v("<head>")]),e._v("或"),n("code",[e._v("<body>")]),e._v("，浏览器会自动创建。另外，这两个属性是可写的，如果改写它们的值，相当于移除所有子节点。")]),e._v(" "),n("h4",{attrs:{id:"_5-document-scrollingelement"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-document-scrollingelement"}},[e._v("#")]),e._v(" 5. document.scrollingElement")]),e._v(" "),n("p",[e._v("document.scrollingElement属性返回文档的滚动元素。也就是说，当文档整体滚动时，到底是哪个元素在滚动。")]),e._v(" "),n("p",[e._v("标准模式下，这个属性返回的文档的根元素document.documentElement（即"),n("code",[e._v("<html>")]),e._v("）。兼容（quirk）模式下，返回的是"),n("code",[e._v("<body>")]),e._v("元素，如果该元素不存在，返回null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 页面滚动到浏览器顶部\ndocument.scrollingElement.scrollTop = 0;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h4",{attrs:{id:"_6-document-activeelement"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-document-activeelement"}},[e._v("#")]),e._v(" 6. document.activeElement")]),e._v(" "),n("p",[e._v("document.activeElement属性返回获得当前焦点（focus）的 DOM 元素。通常，这个属性返回的是"),n("code",[e._v("<input>")]),e._v("、"),n("code",[e._v("<textarea>")]),e._v("、"),n("code",[e._v("<select>")]),e._v("等表单元素，如果当前没有焦点元素，返回"),n("code",[e._v("<body>")]),e._v("元素或null。")]),e._v(" "),n("h4",{attrs:{id:"_7-document-fullscreenelement"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-document-fullscreenelement"}},[e._v("#")]),e._v(" 7. document.fullscreenElement")]),e._v(" "),n("p",[e._v("document.fullscreenElement属性返回当前以全屏状态展示的 DOM 元素。如果不是全屏状态，该属性返回null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("if (document.fullscreenElement.nodeName == 'VIDEO') {\n  console.log('全屏播放视频');\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("上面代码中，通过document.fullscreenElement可以知道"),n("code",[e._v("<video>")]),e._v("元素有没有处在全屏状态，从而判断用户行为。")]),e._v(" "),n("h3",{attrs:{id:"_2-节点集合属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-节点集合属性"}},[e._v("#")]),e._v(" 2. 节点集合属性")]),e._v(" "),n("p",[e._v("以下属性返回一个HTMLCollection实例，表示文档内部特定元素的集合。这些集合都是动态的，原节点有任何变化，立刻会反映在集合中。")]),e._v(" "),n("h4",{attrs:{id:"_1-document-links"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-document-links"}},[e._v("#")]),e._v(" 1. document.links")]),e._v(" "),n("p",[e._v("document.links属性返回当前文档所有设定了href属性的"),n("code",[e._v("<a>")]),e._v("及"),n("code",[e._v("<area>")]),e._v("节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 打印文档所有的链接\nvar links = document.links;\nfor(var i = 0; i < links.length; i++) {\n  console.log(links[i]);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("h4",{attrs:{id:"_2-document-forms"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-document-forms"}},[e._v("#")]),e._v(" 2. document.forms")]),e._v(" "),n("p",[e._v("document.forms属性返回所有"),n("code",[e._v("<form>")]),e._v("表单节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var selectForm = document.forms[0];\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("上面代码获取文档第一个表单。")]),e._v(" "),n("p",[e._v("除了使用位置序号，id属性和name属性也可以用来引用表单。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('/* HTML 代码如下\n  <form name="foo" id="bar"></form>\n*/\ndocument.forms[0] === document.forms.foo // true\ndocument.forms.bar === document.forms.foo // true\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("h4",{attrs:{id:"_3-document-images"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-document-images"}},[e._v("#")]),e._v(" 3. document.images")]),e._v(" "),n("p",[e._v("document.images属性返回页面所有"),n("code",[e._v("<img>")]),e._v("图片节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var imglist = document.images;\n\nfor(var i = 0; i < imglist.length; i++) {\n  if (imglist[i].src === 'banner.gif') {\n    // ...\n  }\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("上面代码在所有img标签中，寻找某张图片。")]),e._v(" "),n("h4",{attrs:{id:"_4-document-embeds-document-plugins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-document-embeds-document-plugins"}},[e._v("#")]),e._v(" 4. document.embeds，document.plugins")]),e._v(" "),n("p",[e._v("document.embeds属性和document.plugins属性，都返回所有"),n("code",[e._v("<embed>")]),e._v("节点。")]),e._v(" "),n("h4",{attrs:{id:"_5-document-scripts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-document-scripts"}},[e._v("#")]),e._v(" 5. document.scripts")]),e._v(" "),n("p",[e._v("document.scripts属性返回所有"),n("code",[e._v("<script>")]),e._v("节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var scripts = document.scripts;\nif (scripts.length !== 0 ) {\n  console.log('当前网页有脚本');\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("h4",{attrs:{id:"_6-document-stylesheets"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-document-stylesheets"}},[e._v("#")]),e._v(" 6. document.styleSheets")]),e._v(" "),n("p",[e._v("document.styleSheets属性返回文档内嵌或引入的样式表集合，详细介绍请看《CSS 对象模型》一章。")]),e._v(" "),n("h4",{attrs:{id:"_7-小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-小结"}},[e._v("#")]),e._v(" 7. 小结")]),e._v(" "),n("p",[e._v("除了document.styleSheets，以上的集合属性返回的都是HTMLCollection实例。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.links instanceof HTMLCollection // true\ndocument.images instanceof HTMLCollection // true\ndocument.forms instanceof HTMLCollection // true\ndocument.embeds instanceof HTMLCollection // true\ndocument.scripts instanceof HTMLCollection // true\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("HTMLCollection实例是类似数组的对象，所以这些属性都有length属性，都可以使用方括号运算符引用成员。如果成员有id或name属性，还可以用这两个属性的值，在HTMLCollection实例上引用到这个成员。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// HTML 代码如下\n// <form name="myForm">\ndocument.myForm === document.forms.myForm // true\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h3",{attrs:{id:"_3-文档静态信息属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-文档静态信息属性"}},[e._v("#")]),e._v(" 3. 文档静态信息属性")]),e._v(" "),n("p",[e._v("以下属性返回文档信息。")]),e._v(" "),n("h4",{attrs:{id:"_1-document-documenturi-document-url"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-document-documenturi-document-url"}},[e._v("#")]),e._v(" 1. document.documentURI，document.URL")]),e._v(" "),n("p",[e._v("document.documentURI属性和document.URL属性都返回一个字符串，表示当前文档的网址。不同之处是它们继承自不同的接口，documentURI继承自Document接口，可用于所有文档；URL继承自HTMLDocument接口，只能用于 HTML 文档。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.URL\n// http://www.example.com/about\n\ndocument.documentURI === document.URL\n// true\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("如果文档的锚点（#anchor）变化，这两个属性都会跟着变化。")]),e._v(" "),n("h4",{attrs:{id:"_2-document-domain"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-document-domain"}},[e._v("#")]),e._v(" 2. document.domain")]),e._v(" "),n("p",[e._v("document.domain属性返回当前文档的域名，不包含协议和端口。比如，网页的网址是"),n("code",[e._v("http://www.example.com:80/hello.html")]),e._v("，那么document.domain属性就等于www.example.com。如果无法获取域名，该属性返回null。")]),e._v(" "),n("p",[e._v("document.domain基本上是一个只读属性，只有一种情况除外。次级域名的网页，可以把document.domain设为对应的上级域名。比如，当前域名是a.sub.example.com，则document.domain属性可以设置为sub.example.com，也可以设为example.com。修改后，document.domain相同的两个网页，可以读取对方的资源，比如设置的 Cookie。")]),e._v(" "),n("p",[e._v("另外，设置document.domain会导致端口被改成null。因此，如果通过设置document.domain来进行通信，双方网页都必须设置这个值，才能保证端口相同。")]),e._v(" "),n("h4",{attrs:{id:"_3-document-location"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-document-location"}},[e._v("#")]),e._v(" 3. document.location")]),e._v(" "),n("p",[e._v("Location对象是浏览器提供的原生对象，提供 URL 相关的信息和操作方法。通过window.location和document.location属性，可以拿到这个对象。")]),e._v(" "),n("p",[e._v("关于这个对象的详细介绍，请看《浏览器模型》部分的《Location 对象》章节。")]),e._v(" "),n("h4",{attrs:{id:"_4-document-lastmodified"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-document-lastmodified"}},[e._v("#")]),e._v(" 4. document.lastModified")]),e._v(" "),n("p",[e._v("document.lastModified属性返回一个字符串，表示当前文档最后修改的时间。不同浏览器的返回值，日期格式是不一样的。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('document.lastModified\n// "03/07/2018 11:18:27"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("注意，document.lastModified属性的值是字符串，所以不能直接用来比较。Date.parse方法将其转为Date实例，才能比较两个网页。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var lastVisitedDate = Date.parse('01/01/2018');\nif (Date.parse(document.lastModified) > lastVisitedDate) {\n  console.log('网页已经变更');\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("如果页面上有 JavaScript 生成的内容，document.lastModified属性返回的总是当前时间。")]),e._v(" "),n("h4",{attrs:{id:"_5-document-title"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-document-title"}},[e._v("#")]),e._v(" 5. document.title")]),e._v(" "),n("p",[e._v("document.title属性返回当前文档的标题。默认情况下，返回"),n("code",[e._v("<title>")]),e._v("节点的值。但是该属性是可写的，一旦被修改，就返回修改后的值。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.title = '新标题';\ndocument.title // \"新标题\"\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h4",{attrs:{id:"_6-document-characterset"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-document-characterset"}},[e._v("#")]),e._v(" 6. document.characterSet")]),e._v(" "),n("p",[e._v("document.characterSet属性返回当前文档的编码，比如UTF-8、ISO-8859-1等等。")]),e._v(" "),n("h4",{attrs:{id:"_7-document-referrer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-document-referrer"}},[e._v("#")]),e._v(" 7. document.referrer")]),e._v(" "),n("p",[e._v("document.referrer属性返回一个字符串，表示当前文档的访问者来自哪里。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('document.referrer\n// "https://example.com/path"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("如果无法获取来源，或者用户直接键入网址而不是从其他网页点击进入，document.referrer返回一个空字符串。")]),e._v(" "),n("p",[e._v("document.referrer的值，总是与 HTTP 头信息的Referer字段保持一致。但是，document.referrer的拼写有两个r，而头信息的Referer字段只有一个r。")]),e._v(" "),n("h4",{attrs:{id:"_8-document-dir"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-document-dir"}},[e._v("#")]),e._v(" 8. document.dir")]),e._v(" "),n("p",[e._v("document.dir返回一个字符串，表示文字方向。它只有两个可能的值：rtl表示文字从右到左，阿拉伯文是这种方式；ltr表示文字从左到右，包括英语和汉语在内的大多数文字采用这种方式。")]),e._v(" "),n("h4",{attrs:{id:"_9-document-compatmode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-document-compatmode"}},[e._v("#")]),e._v(" 9. document.compatMode")]),e._v(" "),n("p",[e._v("compatMode属性返回浏览器处理文档的模式，可能的值为BackCompat（向后兼容模式）和CSS1Compat（严格模式）。")]),e._v(" "),n("p",[e._v("一般来说，如果网页代码的第一行设置了明确的DOCTYPE（比如"),n("code",[e._v("<!doctype html>")]),e._v("），document.compatMode的值都为CSS1Compat。")]),e._v(" "),n("h3",{attrs:{id:"_4-文档状态属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-文档状态属性"}},[e._v("#")]),e._v(" 4. 文档状态属性")]),e._v(" "),n("h4",{attrs:{id:"_1-document-hidden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-document-hidden"}},[e._v("#")]),e._v(" 1. document.hidden")]),e._v(" "),n("p",[e._v("document.hidden属性返回一个布尔值，表示当前页面是否可见。如果窗口最小化、浏览器切换了 Tab，都会导致导致页面不可见，使得document.hidden返回true。")]),e._v(" "),n("p",[e._v("这个属性是 Page Visibility API 引入的，一般都是配合这个 API 使用。")]),e._v(" "),n("h4",{attrs:{id:"_2-document-visibilitystate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-document-visibilitystate"}},[e._v("#")]),e._v(" 2. document.visibilityState")]),e._v(" "),n("p",[e._v("document.visibilityState返回文档的可见状态。")]),e._v(" "),n("p",[e._v("它的值有四种可能。")]),e._v(" "),n("ul",[n("li",[e._v("visible：页面可见。注意，页面可能是部分可见，即不是焦点窗口，前面被其他窗口部分挡住了。")]),e._v(" "),n("li",[e._v("hidden：页面不可见，有可能窗口最小化，或者浏览器切换到了另一个 Tab。")]),e._v(" "),n("li",[e._v("prerender：页面处于正在渲染状态，对于用户来说，该页面不可见。")]),e._v(" "),n("li",[e._v("unloaded：页面从内存里面卸载了。")])]),e._v(" "),n("p",[e._v("这个属性可以用在页面加载时，防止加载某些资源；或者页面不可见时，停掉一些页面功能。")]),e._v(" "),n("h4",{attrs:{id:"_3-document-readystate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-document-readystate"}},[e._v("#")]),e._v(" 3. document.readyState")]),e._v(" "),n("p",[e._v("document.readyState属性返回当前文档的状态，共有三种可能的值。")]),e._v(" "),n("ul",[n("li",[e._v("loading：加载 HTML 代码阶段（尚未完成解析）")]),e._v(" "),n("li",[e._v("interactive：加载外部资源阶段")]),e._v(" "),n("li",[e._v("complete：加载完成")])]),e._v(" "),n("p",[e._v("这个属性变化的过程如下。")]),e._v(" "),n("ul",[n("li",[e._v("浏览器开始解析 HTML 文档，document.readyState属性等于loading。")]),e._v(" "),n("li",[e._v("浏览器遇到 HTML 文档中的"),n("code",[e._v("<script>")]),e._v("元素，并且没有async或defer属性，就暂停解析，开始执行脚本，这时document.readyState属性还是等于loading。")]),e._v(" "),n("li",[e._v("HTML 文档解析完成，document.readyState属性变成interactive。")]),e._v(" "),n("li",[e._v("浏览器等待图片、样式表、字体文件等外部资源加载完成，一旦全部加载完成，document.readyState属性变成complete。")])]),e._v(" "),n("p",[e._v("下面的代码用来检查网页是否加载成功。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 基本检查\nif (document.readyState === 'complete') {\n  // ...\n}\n\n// 轮询检查\nvar interval = setInterval(function() {\n  if (document.readyState === 'complete') {\n    clearInterval(interval);\n    // ...\n  }\n}, 100);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("另外，每次状态变化都会触发一个readystatechange事件。")]),e._v(" "),n("h3",{attrs:{id:"_5-document-cookie"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-document-cookie"}},[e._v("#")]),e._v(" 5. document.cookie")]),e._v(" "),n("p",[e._v("document.cookie属性用来操作浏览器 Cookie，详见《浏览器模型》部分的《Cookie》章节。")]),e._v(" "),n("h3",{attrs:{id:"_6-document-designmode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-document-designmode"}},[e._v("#")]),e._v(" 6. document.designMode")]),e._v(" "),n("p",[e._v("document.designMode属性控制当前文档是否可编辑。该属性只有两个值on和off，默认值为off。一旦设为on，用户就可以编辑整个文档的内容。")]),e._v(" "),n("p",[e._v("下面代码打开iframe元素内部文档的designMode属性，就能将其变为一个所见即所得的编辑器。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// HTML 代码如下\n// <iframe id=\"editor\" src=\"about:blank\"></iframe>\nvar editor = document.getElementById('editor');\neditor.contentDocument.designMode = 'on';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("h3",{attrs:{id:"_7-document-implementation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-document-implementation"}},[e._v("#")]),e._v(" 7. document.implementation")]),e._v(" "),n("p",[e._v("document.implementation属性返回一个DOMImplementation对象。该对象有三个方法，主要用于创建独立于当前文档的新的 Document 对象。")]),e._v(" "),n("ul",[n("li",[e._v("DOMImplementation.createDocument()：创建一个 XML 文档。")]),e._v(" "),n("li",[e._v("DOMImplementation.createHTMLDocument()：创建一个 HTML 文档。")]),e._v(" "),n("li",[e._v("DOMImplementation.createDocumentType()：创建一个 DocumentType 对象。")])]),e._v(" "),n("p",[e._v("下面是创建 HTML 文档的例子。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var doc = document.implementation.createHTMLDocument('Title');\nvar p = doc.createElement('p');\np.innerHTML = 'hello world';\ndoc.body.appendChild(p);\n\ndocument.replaceChild(\n  doc.documentElement,\n  document.documentElement\n);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("上面代码中，第一步生成一个新的 HTML 文档doc，然后用它的根元素document.documentElement替换掉document.documentElement。这会使得当前文档的内容全部消失，变成hello world。")]),e._v(" "),n("h2",{attrs:{id:"方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),n("h3",{attrs:{id:"_1-操作类方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-操作类方法"}},[e._v("#")]),e._v(" 1. 操作类方法")]),e._v(" "),n("h4",{attrs:{id:"_1-document-open-document-close"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-document-open-document-close"}},[e._v("#")]),e._v(" 1. document.open()，document.close()")]),e._v(" "),n("p",[e._v("document.open方法清除当前文档所有内容，使得文档处于可写状态，供document.write方法写入内容。")]),e._v(" "),n("p",[e._v("document.close方法用来关闭document.open()打开的文档。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.open();\ndocument.write('hello world');\ndocument.close();\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h4",{attrs:{id:"_2-document-write-document-writeln"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-document-write-document-writeln"}},[e._v("#")]),e._v(" 2. document.write()，document.writeln()")]),e._v(" "),n("p",[e._v("document.write方法用于向当前文档写入内容。")]),e._v(" "),n("p",[e._v("在网页的首次渲染阶段，只要页面没有关闭写入（即没有执行document.close()），document.write写入的内容就会追加在已有内容的后面。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 页面显示“helloworld”\ndocument.open();\ndocument.write('hello');\ndocument.write('world');\ndocument.close();\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("注意，document.write会当作 HTML 代码解析，不会转义。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.write('<p>hello world</p>');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("上面代码中，document.write会将"),n("code",[e._v("<p>")]),e._v("当作 HTML 标签解释。")]),e._v(" "),n("p",[e._v("如果页面已经解析完成（DOMContentLoaded事件发生之后），再调用write方法，它会先调用open方法，擦除当前文档所有内容，然后再写入。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.addEventListener('DOMContentLoaded', function (event) {\n  document.write('<p>Hello World!</p>');\n});\n\n// 等同于\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  document.open();\n  document.write('<p>Hello World!</p>');\n  document.close();\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("如果在页面渲染过程中调用write方法，并不会自动调用open方法。（可以理解成，open方法已调用，但close方法还未调用。）")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<html>\n<body>\nhello\n<script type="text/javascript">\n  document.write("world")\n<\/script>\n</body>\n</html>\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("在浏览器打开上面网页，将会显示hello world。")]),e._v(" "),n("p",[e._v("document.write是 JavaScript 语言标准化之前就存在的方法，现在完全有更符合标准的方法向文档写入内容（比如对innerHTML属性赋值）。所以，除了某些特殊情况，应该尽量避免使用document.write这个方法。")]),e._v(" "),n("p",[e._v("document.writeln方法与write方法完全一致，除了会在输出内容的尾部添加换行符。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.write(1);\ndocument.write(2);\n// 12\n\ndocument.writeln(1);\ndocument.writeln(2);\n// 1\n// 2\n//\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("注意，writeln方法添加的是 ASCII 码的换行符，渲染成 HTML 网页时不起作用，即在网页上显示不出换行。网页上的换行，必须显式写入"),n("code",[e._v("<br>")]),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"_2-获取类方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取类方法"}},[e._v("#")]),e._v(" 2. 获取类方法")]),e._v(" "),n("h4",{attrs:{id:"_1-document-queryselector-document-queryselectorall"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-document-queryselector-document-queryselectorall"}},[e._v("#")]),e._v(" 1.document.querySelector()，document.querySelectorAll()")]),e._v(" "),n("p",[e._v("document.querySelector方法接受一个 CSS 选择器作为参数，返回匹配该选择器的元素节点。如果有多个节点满足匹配条件，则返回第一个匹配的节点。如果没有发现匹配的节点，则返回null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var el1 = document.querySelector('.myclass');\nvar el2 = document.querySelector('#myParent > [ng-click]');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("document.querySelectorAll方法与querySelector用法类似，区别是返回一个NodeList对象，包含所有匹配给定选择器的节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("elementList = document.querySelectorAll('.myclass');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("这两个方法的参数，可以是逗号分隔的多个 CSS 选择器，返回匹配其中一个选择器的元素节点，这与 CSS 选择器的规则是一致的。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var matches = document.querySelectorAll('div.note, div.alert');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("上面代码返回class属性是note或alert的div元素。")]),e._v(" "),n("p",[e._v("这两个方法都支持复杂的 CSS 选择器。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 选中 data-foo-bar 属性等于 someval 的元素\ndocument.querySelectorAll('[data-foo-bar=\"someval\"]');\n\n// 选中 myForm 表单中所有不通过验证的元素\ndocument.querySelectorAll('#myForm :invalid');\n\n// 选中div元素，那些 class 含 ignore 的除外\ndocument.querySelectorAll('DIV:not(.ignore)');\n\n// 同时选中 div，a，script 三类元素\ndocument.querySelectorAll('DIV, A, SCRIPT');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("p",[e._v("但是，它们不支持 CSS 伪元素的选择器（比如:first-line和:first-letter）和伪类的选择器（比如:link和:visited），即无法选中伪元素和伪类。")]),e._v(" "),n("p",[e._v("如果querySelectorAll方法的参数是字符串*，则会返回文档中的所有元素节点。另外，querySelectorAll的返回结果不是动态集合，不会实时反映元素节点的变化。")]),e._v(" "),n("p",[e._v("最后，这两个方法除了定义在document对象上，还定义在元素节点上，即在元素节点上也可以调用。")]),e._v(" "),n("h4",{attrs:{id:"_2-document-getelementsbytagname"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-document-getelementsbytagname"}},[e._v("#")]),e._v(" 2. document.getElementsByTagName()")]),e._v(" "),n("p",[e._v("document.getElementsByTagName方法搜索 HTML 标签名，返回符合条件的元素。它的返回值是一个类似数组对象（HTMLCollection实例），可以实时反映 HTML 文档的变化。如果没有任何匹配的元素，就返回一个空集。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var paras = document.getElementsByTagName('p');\nparas instanceof HTMLCollection // true\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("上面代码返回当前文档的所有p元素节点。")]),e._v(" "),n("p",[e._v("HTML 标签名是大小写不敏感的，因此getElementsByTagName方法也是大小写不敏感的。另外，返回结果中，各个成员的顺序就是它们在文档中出现的顺序。")]),e._v(" "),n("p",[e._v("如果传入*，就可以返回文档中所有 HTML 元素。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var allElements = document.getElementsByTagName('*');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("注意，元素节点本身也定义了getElementsByTagName方法，返回该元素的后代元素中符合条件的元素。也就是说，这个方法不仅可以在document对象上调用，也可以在任何元素节点上调用。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var firstPara = document.getElementsByTagName('p')[0];\nvar spans = firstPara.getElementsByTagName('span');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("上面代码选中第一个p元素内部的所有span元素。")]),e._v(" "),n("h4",{attrs:{id:"_3-document-getelementsbyclassname"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-document-getelementsbyclassname"}},[e._v("#")]),e._v(" 3. document.getElementsByClassName()")]),e._v(" "),n("p",[e._v("document.getElementsByClassName方法返回一个类似数组的对象（HTMLCollection实例），包括了所有class名字符合指定条件的元素，元素的变化实时反映在返回结果中。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var elements = document.getElementsByClassName(names);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("由于class是保留字，所以 JavaScript 一律使用className表示 CSS 的class。")]),e._v(" "),n("p",[e._v("参数可以是多个class，它们之间使用空格分隔。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var elements = document.getElementsByClassName('foo bar');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("上面代码返回同时具有foo和bar两个class的元素，foo和bar的顺序不重要。")]),e._v(" "),n("p",[e._v("注意，正常模式下，CSS 的class是大小写敏感的。（quirks mode下，大小写不敏感。）")]),e._v(" "),n("p",[e._v("与getElementsByTagName方法一样，getElementsByClassName方法不仅可以在document对象上调用，也可以在任何元素节点上调用。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 非document对象上调用\nvar elements = rootElement.getElementsByClassName(names);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h4",{attrs:{id:"_4-document-getelementsbyname"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-document-getelementsbyname"}},[e._v("#")]),e._v(" 4. document.getElementsByName()")]),e._v(" "),n("p",[e._v("document.getElementsByName方法用于选择拥有name属性的 HTML 元素（比如"),n("code",[e._v("<form>")]),e._v("、"),n("code",[e._v("<radio>")]),e._v("、"),n("code",[e._v("<img>")]),e._v("、"),n("code",[e._v("<frame>")]),e._v("、"),n("code",[e._v("<embed>")]),e._v("和"),n("code",[e._v("<object>")]),e._v("等），返回一个类似数组的的对象（NodeList实例），因为name属性相同的元素可能不止一个。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// 表单为 <form name="x"></form>\nvar forms = document.getElementsByName(\'x\');\nforms[0].tagName // "FORM"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h4",{attrs:{id:"_5-document-getelementbyid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-document-getelementbyid"}},[e._v("#")]),e._v(" 5. document.getElementById()")]),e._v(" "),n("p",[e._v("document.getElementById方法返回匹配指定id属性的元素节点。如果没有发现匹配的节点，则返回null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var elem = document.getElementById('para1');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("注意，该方法的参数是大小写敏感的。比如，如果某个节点的id属性是main，那么document.getElementById('Main')将返回null。")]),e._v(" "),n("p",[e._v("document.getElementById方法与document.querySelector方法都能获取元素节点，不同之处是document.querySelector方法的参数使用 CSS 选择器语法，document.getElementById方法的参数是元素的id属性。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.getElementById('myElement')\ndocument.querySelector('#myElement')\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("上面代码中，两个方法都能选中id为myElement的元素，但是document.getElementById()比document.querySelector()效率高得多。")]),e._v(" "),n("p",[e._v("另外，这个方法只能在document对象上使用，不能在其他元素节点上使用。")]),e._v(" "),n("h4",{attrs:{id:"_6-document-elementfrompoint-document-elementsfrompoint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-document-elementfrompoint-document-elementsfrompoint"}},[e._v("#")]),e._v(" 6. document.elementFromPoint()，document.elementsFromPoint()")]),e._v(" "),n("p",[e._v("document.elementFromPoint方法返回位于页面指定位置最上层的元素节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var element = document.elementFromPoint(50, 50);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("上面代码选中在(50, 50)这个坐标位置的最上层的那个 HTML 元素。")]),e._v(" "),n("p",[e._v("elementFromPoint方法的两个参数，依次是相对于当前视口左上角的横坐标和纵坐标，单位是像素。如果位于该位置的 HTML 元素不可返回（比如文本框的滚动条），则返回它的父元素（比如文本框）。如果坐标值无意义（比如负值或超过视口大小），则返回null。")]),e._v(" "),n("p",[e._v("document.elementsFromPoint()返回一个数组，成员是位于指定坐标（相对于视口）的所有元素。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var elements = document.elementsFromPoint(x, y);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h4",{attrs:{id:"_7-document-caretpositionfrompoint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-document-caretpositionfrompoint"}},[e._v("#")]),e._v(" 7. document.caretPositionFromPoint()")]),e._v(" "),n("p",[e._v("document.caretPositionFromPoint()返回一个 CaretPosition 对象，包含了指定坐标点在节点对象内部的位置信息。CaretPosition 对象就是光标插入点的概念，用于确定光标点在文本对象内部的具体位置。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var range = document.caretPositionFromPoint(clientX, clientY);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("上面代码中，range是指定坐标点的 CaretPosition 对象。该对象有两个属性。")]),e._v(" "),n("ul",[n("li",[e._v("CaretPosition.offsetNode：该位置的节点对象")]),e._v(" "),n("li",[e._v("CaretPosition.offset：该位置在offsetNode对象内部，与起始位置相距的字符数。")])]),e._v(" "),n("h3",{attrs:{id:"_3-创建类方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建类方法"}},[e._v("#")]),e._v(" 3. 创建类方法")]),e._v(" "),n("h4",{attrs:{id:"_1-document-createelement"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-document-createelement"}},[e._v("#")]),e._v(" 1. document.createElement()")]),e._v(" "),n("p",[e._v("document.createElement方法用来生成元素节点，并返回该节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var newDiv = document.createElement('div');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("createElement方法的参数为元素的标签名，即元素节点的tagName属性，对于 HTML 网页大小写不敏感，即参数为div或DIV返回的是同一种节点。如果参数里面包含尖括号（即<和>）会报错。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.createElement('<div>');\n// DOMException: The tag name provided ('<div>') is not a valid name\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("注意，document.createElement的参数可以是自定义的标签名。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.createElement('foo');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h4",{attrs:{id:"_2-document-createtextnode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-document-createtextnode"}},[e._v("#")]),e._v(" 2. document.createTextNode()")]),e._v(" "),n("p",[e._v("document.createTextNode方法用来生成文本节点（Text实例），并返回该节点。它的参数是文本节点的内容。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var newDiv = document.createElement('div');\nvar newContent = document.createTextNode('Hello');\nnewDiv.appendChild(newContent);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("上面代码新建一个div节点和一个文本节点，然后将文本节点插入div节点。")]),e._v(" "),n("p",[e._v("这个方法可以确保返回的节点，被浏览器当作文本渲染，而不是当作 HTML 代码渲染。因此，可以用来展示用户的输入，避免 XSS 攻击。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var div = document.createElement('div');\ndiv.appendChild(document.createTextNode('<span>Foo & bar</span>'));\nconsole.log(div.innerHTML)\n// &lt;span&gt;Foo &amp; bar&lt;/span&gt;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("上面代码中，createTextNode方法对大于号和小于号进行转义，从而保证即使用户输入的内容包含恶意代码，也能正确显示。")]),e._v(" "),n("p",[e._v("需要注意的是，该方法不对单引号和双引号转义，所以不能用来对 HTML 属性赋值。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function escapeHtml(str) {\n  var div = document.createElement('div');\n  div.appendChild(document.createTextNode(str));\n  return div.innerHTML;\n};\n\nvar userWebsite = '\" onmouseover=\"alert(\\'derp\\')\" \"';\nvar profileLink = '<a href=\"' + escapeHtml(userWebsite) + '\">Bob</a>';\nvar div = document.getElementById('target');\ndiv.innerHTML = profileLink;\n// <a href=\"\" onmouseover=\"alert('derp')\" \"\">Bob</a>\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("p",[e._v("上面代码中，由于createTextNode方法不转义双引号，导致onmouseover方法被注入了代码。")]),e._v(" "),n("h4",{attrs:{id:"_3-document-createattribute"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-document-createattribute"}},[e._v("#")]),e._v(" 3. document.createAttribute()")]),e._v(" "),n("p",[e._v("document.createAttribute方法生成一个新的属性节点（Attr实例），并返回它。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var attribute = document.createAttribute(name);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("document.createAttribute方法的参数name，是属性的名称。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var node = document.getElementById('div1');\n\nvar a = document.createAttribute('my_attrib');\na.value = 'newVal';\n\nnode.setAttributeNode(a);\n// 或者\nnode.setAttribute('my_attrib', 'newVal');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("上面代码为div1节点，插入一个值为newVal的my_attrib属性。")]),e._v(" "),n("h4",{attrs:{id:"_4-document-createcomment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-document-createcomment"}},[e._v("#")]),e._v(" 4. document.createComment()")]),e._v(" "),n("p",[e._v("document.createComment方法生成一个新的注释节点，并返回该节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var CommentNode = document.createComment(data);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("document.createComment方法的参数是一个字符串，会成为注释节点的内容。")]),e._v(" "),n("h4",{attrs:{id:"_5-document-createdocumentfragment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-document-createdocumentfragment"}},[e._v("#")]),e._v(" 5. document.createDocumentFragment()")]),e._v(" "),n("p",[e._v("document.createDocumentFragment方法生成一个空的文档片段对象（DocumentFragment实例）。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var docFragment = document.createDocumentFragment();\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("DocumentFragment是一个存在于内存的 DOM 片段，不属于当前文档，常常用来生成一段较复杂的 DOM 结构，然后再插入当前文档。这样做的好处在于，因为DocumentFragment不属于当前文档，对它的任何改动，都不会引发网页的重新渲染，比直接修改当前文档的 DOM 有更好的性能表现。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var docfrag = document.createDocumentFragment();\n\n[1, 2, 3, 4].forEach(function (e) {\n  var li = document.createElement('li');\n  li.textContent = e;\n  docfrag.appendChild(li);\n});\n\nvar element  = document.getElementById('ul');\nelement.appendChild(docfrag);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("上面代码中，文档片断docfrag包含四个"),n("code",[e._v("<li>")]),e._v("节点，这些子节点被一次性插入了当前文档。")]),e._v(" "),n("h4",{attrs:{id:"_6-document-createevent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-document-createevent"}},[e._v("#")]),e._v(" 6. document.createEvent()")]),e._v(" "),n("p",[e._v("document.createEvent方法生成一个事件对象（Event实例），该对象可以被element.dispatchEvent方法使用，触发指定事件。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var event = document.createEvent(type);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("document.createEvent方法的参数是事件类型，比如UIEvents、MouseEvents、MutationEvents、HTMLEvents。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var event = document.createEvent('Event');\nevent.initEvent('build', true, true);\ndocument.addEventListener('build', function (e) {\n  console.log(e.type); // \"build\"\n}, false);\ndocument.dispatchEvent(event);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[e._v("上面代码新建了一个名为build的事件实例，然后触发该事件。")]),e._v(" "),n("h3",{attrs:{id:"_4-document-addeventlistener-document-removeeventlistener-document-dispatchevent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-document-addeventlistener-document-removeeventlistener-document-dispatchevent"}},[e._v("#")]),e._v(" 4. document.addEventListener()，document.removeEventListener()，document.dispatchEvent()")]),e._v(" "),n("p",[e._v("这三个方法用于处理document节点的事件。它们都继承自EventTarget接口，详细介绍参见《EventTarget 接口》一章。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 添加事件监听函数\ndocument.addEventListener('click', listener, false);\n\n// 移除事件监听函数\ndocument.removeEventListener('click', listener, false);\n\n// 触发事件\nvar event = new Event('click');\ndocument.dispatchEvent(event);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h3",{attrs:{id:"_5-document-hasfocus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-document-hasfocus"}},[e._v("#")]),e._v(" 5. document.hasFocus()")]),e._v(" "),n("p",[e._v("document.hasFocus方法返回一个布尔值，表示当前文档之中是否有元素被激活或获得焦点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var focused = document.hasFocus();\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("注意，有焦点的文档必定被激活（active），反之不成立，激活的文档未必有焦点。比如，用户点击按钮，从当前窗口跳出一个新窗口，该新窗口就是激活的，但是不拥有焦点。")]),e._v(" "),n("h3",{attrs:{id:"_6-document-adoptnode-document-importnode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-document-adoptnode-document-importnode"}},[e._v("#")]),e._v(" 6. document.adoptNode()，document.importNode()")]),e._v(" "),n("p",[e._v("document.adoptNode方法将某个节点及其子节点，从原来所在的文档或DocumentFragment里面移除，归属当前document对象，返回插入后的新节点。插入的节点对象的ownerDocument属性，会变成当前的document对象，而parentNode属性是null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var node = document.adoptNode(externalNode);\ndocument.appendChild(node);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("注意，document.adoptNode方法只是改变了节点的归属，并没有将这个节点插入新的文档树。所以，还要再用appendChild方法或insertBefore方法，将新节点插入当前文档树。")]),e._v(" "),n("p",[e._v("document.importNode方法则是从原来所在的文档或DocumentFragment里面，拷贝某个节点及其子节点，让它们归属当前document对象。拷贝的节点对象的ownerDocument属性，会变成当前的document对象，而parentNode属性是null。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var node = document.importNode(externalNode, deep);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("document.importNode方法的第一个参数是外部节点，第二个参数是一个布尔值，表示对外部节点是深拷贝还是浅拷贝，默认是浅拷贝（false）。虽然第二个参数是可选的，但是建议总是保留这个参数，并设为true。")]),e._v(" "),n("p",[e._v("注意，document.importNode方法只是拷贝外部节点，这时该节点的父节点是null。下一步还必须将这个节点插入当前文档树。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var iframe = document.getElementsByTagName('iframe')[0];\nvar oldNode = iframe.contentWindow.document.getElementById('myNode');\nvar newNode = document.importNode(oldNode, true);\ndocument.getElementById(\"container\").appendChild(newNode);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("上面代码从iframe窗口，拷贝一个指定节点myNode，插入当前文档。")]),e._v(" "),n("h3",{attrs:{id:"_7-document-createnodeiterator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-document-createnodeiterator"}},[e._v("#")]),e._v(" 7. document.createNodeIterator()")]),e._v(" "),n("p",[e._v("document.createNodeIterator方法返回一个子节点遍历器。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var nodeIterator = document.createNodeIterator(\n  document.body,\n  NodeFilter.SHOW_ELEMENT\n);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("上面代码返回"),n("code",[e._v("<body>")]),e._v("元素子节点的遍历器。")]),e._v(" "),n("p",[e._v("document.createNodeIterator方法第一个参数为所要遍历的根节点，第二个参数为所要遍历的节点类型，这里指定为元素节点（NodeFilter.SHOW_ELEMENT）。几种主要的节点类型写法如下。")]),e._v(" "),n("ul",[n("li",[e._v("所有节点：NodeFilter.SHOW_ALL")]),e._v(" "),n("li",[e._v("元素节点：NodeFilter.SHOW_ELEMENT")]),e._v(" "),n("li",[e._v("文本节点：NodeFilter.SHOW_TEXT")]),e._v(" "),n("li",[e._v("评论节点：NodeFilter.SHOW_COMMENT")])]),e._v(" "),n("p",[e._v("document.createNodeIterator方法返回一个“遍历器”对象（NodeFilter实例）。该实例的nextNode()方法和previousNode()方法，可以用来遍历所有子节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var nodeIterator = document.createNodeIterator(document.body);\nvar pars = [];\nvar currentNode;\n\nwhile (currentNode = nodeIterator.nextNode()) {\n  pars.push(currentNode);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("上面代码中，使用遍历器的nextNode方法，将根节点的所有子节点，依次读入一个数组。nextNode方法先返回遍历器的内部指针所在的节点，然后会将指针移向下一个节点。所有成员遍历完成后，返回null。previousNode方法则是先将指针移向上一个节点，然后返回该节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var nodeIterator = document.createNodeIterator(\n  document.body,\n  NodeFilter.SHOW_ELEMENT\n);\n\nvar currentNode = nodeIterator.nextNode();\nvar previousNode = nodeIterator.previousNode();\n\ncurrentNode === previousNode // true\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("上面代码中，currentNode和previousNode都指向同一个的节点。")]),e._v(" "),n("p",[e._v("注意，遍历器返回的第一个节点，总是根节点。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("pars[0] === document.body // true\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:"_8-document-createtreewalker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-document-createtreewalker"}},[e._v("#")]),e._v(" 8. document.createTreeWalker()")]),e._v(" "),n("p",[e._v("document.createTreeWalker方法返回一个 DOM 的子树遍历器。它与document.createNodeIterator方法基本是类似的，区别在于它返回的是TreeWalker实例，后者返回的是NodeIterator实例。另外，它的第一个节点不是根节点。")]),e._v(" "),n("p",[e._v("document.createTreeWalker方法的第一个参数是所要遍历的根节点，第二个参数指定所要遍历的节点类型（与document.createNodeIterator方法的第二个参数相同）。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var treeWalker = document.createTreeWalker(\n  document.body,\n  NodeFilter.SHOW_ELEMENT\n);\n\nvar nodeList = [];\n\nwhile(treeWalker.nextNode()) {\n  nodeList.push(treeWalker.currentNode);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("上面代码遍历"),n("code",[e._v("<body>")]),e._v("节点下属的所有元素节点，将它们插入nodeList数组。")]),e._v(" "),n("h3",{attrs:{id:"_9-document-execcommand-document-querycommandsupported-document-querycommandenabled"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-document-execcommand-document-querycommandsupported-document-querycommandenabled"}},[e._v("#")]),e._v(" 9. document.execCommand()，document.queryCommandSupported()，document.queryCommandEnabled()")]),e._v(" "),n("p",[e._v("如果document.designMode属性设为on，那么整个文档用户可编辑；如果元素的contenteditable属性设为true，那么该元素可编辑。这两种情况下，可以使用document.execCommand()方法，改变内容的样式，比如document.execCommand('bold')会使得字体加粗。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("document.execCommand(command, showDefaultUI, input)\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("该方法接受三个参数。")]),e._v(" "),n("ul",[n("li",[e._v("command：字符串，表示所要实施的样式。")]),e._v(" "),n("li",[e._v("showDefaultUI：布尔值，表示是否要使用默认的用户界面，建议总是设为false。")]),e._v(" "),n("li",[e._v("input：字符串，表示该样式的辅助内容，比如生成超级链接时，这个参数就是所要链接的网址。如果第二个参数设为true，那么浏览器会弹出提示框，要求用户在提示框输入该参数。但是，不是所有浏览器都支持这样做，为了兼容性，还是需要自己部署获取这个参数的方式。")])]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var url = window.prompt('请输入网址');\n\nif (url) {\n  document.execCommand('createlink', false, url);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("上面代码中，先提示用户输入所要链接的网址，然后手动生成超级链接。注意，第二个参数是false，表示此时不需要自动弹出提示框。")]),e._v(" "),n("p",[e._v("document.execCommand()的返回值是一个布尔值。如果为false，表示这个方法无法生效。")]),e._v(" "),n("p",[e._v("这个方法大部分情况下，只对选中的内容生效。如果有多个内容可编辑区域，那么只对当前焦点所在的元素生效。")]),e._v(" "),n("p",[e._v("document.execCommand()方法可以执行的样式改变有很多种，下面是其中的一些：bold、insertLineBreak、selectAll、createLink、insertOrderedList、subscript、delete、insertUnorderedList、superscript、formatBlock、insertParagraph、undo、forwardDelete、insertText、unlink、insertImage、italic、unselect、insertHTML、redo。这些值都可以用作第一个参数，它们的含义不难从字面上看出来。")]),e._v(" "),n("p",[e._v("document.queryCommandEnabled()方法返回一个布尔值，表示浏览器是否允许使用这个方法。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("if (document.queryCommandEnabled('SelectAll')) {\n  // ...\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("document.queryCommandSupported()方法返回一个布尔值，表示当前是否可用某种样式改变。比如，加粗只有存在文本选中时才可用，如果没有选中文本，就不可用。")]),e._v(" "),n("div",{staticClass:"language-node line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("if (document.queryCommandSupported('SelectAll')) {\n  // ...\n}\n``\n\ndocument.queryCommandEnabled()方法返回一个布尔值\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])])])}),[],!1,null,null,null);t.default=s.exports}}]);