(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{524:function(a,s,t){"use strict";t.r(s);var n=t(17),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"math对象的扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#math对象的扩展"}},[a._v("#")]),a._v(" Math对象的扩展")]),a._v(" "),t("h2",{attrs:{id:"math静态方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#math静态方法"}},[a._v("#")]),a._v(" Math静态方法")]),a._v(" "),t("h3",{attrs:{id:"_1-trunc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-trunc"}},[a._v("#")]),a._v(" 1. trunc")]),a._v(" "),t("p",[a._v("Math.trunc方法用于去除一个数的小数部分，返回整数部分。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.trunc(4.1) // 4\nMath.trunc(4.9) // 4\nMath.trunc(-4.1) // -4\nMath.trunc(-4.9) // -4\nMath.trunc(-0.1234) // -0\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("对于非数值，Math.trunc内部使用Number方法将其先转为数值。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.trunc('123.456') // 123\nMath.trunc(true) //1\nMath.trunc(false) // 0\nMath.trunc(null) // 0\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("对于空值和无法截取整数的值，返回NaN。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.trunc(NaN);      // NaN\nMath.trunc('foo');    // NaN\nMath.trunc();         // NaN\nMath.trunc(undefined) // NaN\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"_2-sign"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-sign"}},[a._v("#")]),a._v(" 2. sign")]),a._v(" "),t("p",[a._v("Math.sign方法用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。")]),a._v(" "),t("p",[a._v("它会返回五种值。")]),a._v(" "),t("ul",[t("li",[a._v("参数为正数，返回+1；")]),a._v(" "),t("li",[a._v("参数为负数，返回-1；")]),a._v(" "),t("li",[a._v("参数为 0，返回0；")]),a._v(" "),t("li",[a._v("参数为-0，返回-0;")]),a._v(" "),t("li",[a._v("其他值，返回NaN。")])]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.sign(-5) // -1\nMath.sign(5) // +1\nMath.sign(0) // +0\nMath.sign(-0) // -0\nMath.sign(NaN) // NaN\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("如果参数是非数值，会自动转为数值。对于那些无法转为数值的值，会返回NaN。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.sign('')  // 0\nMath.sign(true)  // +1\nMath.sign(false)  // 0\nMath.sign(null)  // 0\nMath.sign('9')  // +1\nMath.sign('foo')  // NaN\nMath.sign()  // NaN\nMath.sign(undefined)  // NaN\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("h3",{attrs:{id:"_3-cbrt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-cbrt"}},[a._v("#")]),a._v(" 3. cbrt")]),a._v(" "),t("p",[a._v("Math.cbrt方法用于计算一个数的立方根。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.cbrt(-1) // -1\nMath.cbrt(0)  // 0\nMath.cbrt(1)  // 1\nMath.cbrt(2)  // 1.2599210498948734\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("对于非数值，Math.cbrt方法内部也是先使用Number方法将其转为数值。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.cbrt('8') // 2\nMath.cbrt('hello') // NaN\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"_4-clz32"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-clz32"}},[a._v("#")]),a._v(" 4. clz32")]),a._v(" "),t("p",[a._v("Math.clz32()方法将参数转为 32 位无符号整数的形式，然后返回这个 32 位值里面有多少个前导 0。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.clz32(0) // 32\nMath.clz32(1) // 31\nMath.clz32(1000) // 22\nMath.clz32(0b01000000000000000000000000000000) // 1\nMath.clz32(0b00100000000000000000000000000000) // 2\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("h3",{attrs:{id:"_5-imul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-imul"}},[a._v("#")]),a._v(" 5. imul")]),a._v(" "),t("p",[a._v("Math.imul方法返回两个数以 32 位带符号整数形式相乘的结果，返回的也是一个 32 位的带符号整数。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.imul(2, 4)   // 8\nMath.imul(-1, 8)  // -8\nMath.imul(-2, -2) // 4\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h3",{attrs:{id:"_6-fround"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-fround"}},[a._v("#")]),a._v(" 6. fround")]),a._v(" "),t("p",[a._v("Math.fround方法返回一个数的32位单精度浮点数形式。")]),a._v(" "),t("p",[a._v("对于32位单精度格式来说，数值精度是24个二进制位（1 位隐藏位与 23 位有效位），所以对于 -224 至 224 之间的整数（不含两个端点），返回结果与参数本身一致。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.fround(0)   // 0\nMath.fround(1)   // 1\nMath.fround(2 ** 24 - 1)   // 16777215\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("如果参数的绝对值大于 224，返回的结果便开始丢失精度。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.fround(2 ** 24)       // 16777216\nMath.fround(2 ** 24 + 1)   // 16777216\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"_7-hypot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-hypot"}},[a._v("#")]),a._v(" 7. hypot")]),a._v(" "),t("p",[a._v("Math.hypot方法返回所有参数的平方和的平方根。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.hypot(3, 4);        // 5\nMath.hypot(3, 4, 5);     // 7.0710678118654755\nMath.hypot();            // 0\nMath.hypot(NaN);         // NaN\nMath.hypot(3, 4, 'foo'); // NaN\nMath.hypot(3, 4, '5');   // 7.0710678118654755\nMath.hypot(-3);          // 3\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("h3",{attrs:{id:"_8-对数方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-对数方法"}},[a._v("#")]),a._v(" 8. 对数方法")]),a._v(" "),t("p",[a._v("（1） Math.expm1()")]),a._v(" "),t("p",[a._v("Math.expm1(x)返回 ex - 1，即Math.exp(x) - 1。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.expm1(-1) // -0.6321205588285577\nMath.expm1(0)  // 0\nMath.expm1(1)  // 1.718281828459045\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("（2）Math.log1p()")]),a._v(" "),t("p",[a._v("Math.log1p(x)方法返回1 + x的自然对数，即Math.log(1 + x)。如果x小于-1，返回NaN。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.log1p(1)  // 0.6931471805599453\nMath.log1p(0)  // 0\nMath.log1p(-1) // -Infinity\nMath.log1p(-2) // NaN\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("（3）Math.log10()")]),a._v(" "),t("p",[a._v("Math.log10(x)返回以 10 为底的x的对数。如果x小于 0，则返回 NaN。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.log10(2)      // 0.3010299956639812\nMath.log10(1)      // 0\nMath.log10(0)      // -Infinity\nMath.log10(-2)     // NaN\nMath.log10(100000) // 5\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("（4）Math.log2()")]),a._v(" "),t("p",[a._v("Math.log2(x)返回以 2 为底的x的对数。如果x小于 0，则返回 NaN。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.log2(3)       // 1.584962500721156\nMath.log2(2)       // 1\nMath.log2(1)       // 0\nMath.log2(0)       // -Infinity\nMath.log2(-2)      // NaN\nMath.log2(1024)    // 10\nMath.log2(1 << 29) // 29\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("h3",{attrs:{id:"_9-双曲函数方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-双曲函数方法"}},[a._v("#")]),a._v(" 9. 双曲函数方法")]),a._v(" "),t("p",[a._v("ES6 新增了 6 个双曲函数方法。")]),a._v(" "),t("ul",[t("li",[a._v("Math.sinh(x) 返回x的双曲正弦（hyperbolic sine）")]),a._v(" "),t("li",[a._v("Math.cosh(x) 返回x的双曲余弦（hyperbolic cosine）")]),a._v(" "),t("li",[a._v("Math.tanh(x) 返回x的双曲正切（hyperbolic tangent）")]),a._v(" "),t("li",[a._v("Math.asinh(x) 返回x的反双曲正弦（inverse hyperbolic sine）")]),a._v(" "),t("li",[a._v("Math.acosh(x) 返回x的反双曲余弦（inverse hyperbolic cosine）")]),a._v(" "),t("li",[a._v("Math.atanh(x) 返回x的反双曲正切（inverse hyperbolic tangent）")])]),a._v(" "),t("h2",{attrs:{id:"指数运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指数运算符"}},[a._v("#")]),a._v(" 指数运算符")]),a._v(" "),t("p",[a._v("ES2016 新增了一个指数运算符（**）。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("2 ** 2 // 4\n2 ** 3 // 8\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("这个运算符的一个特点是右结合，而不是常见的左结合。多个指数运算符连用时，是从最右边开始计算的。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 相当于 2 ** (3 ** 2)\n2 ** 3 ** 2\n// 512\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("上面代码中，首先计算的是第二个指数运算符，而不是第一个。")]),a._v(" "),t("p",[a._v("指数运算符可以与等号结合，形成一个新的赋值运算符（**=）。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let a = 1.5;\na **= 2;\n// 等同于 a = a * a;\n\nlet b = 4;\nb **= 3;\n// 等同于 b = b * b * b;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("p",[a._v("注意，V8 引擎的指数运算符与Math.pow的实现不相同，对于特别大的运算结果，两者会有细微的差异。")]),a._v(" "),t("div",{staticClass:"language-math line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Math.pow(99, 99)\n// 3.697296376497263e+197\n\n99 ** 99\n// 3.697296376497268e+197\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);