(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{537:function(s,e,a){"use strict";a.r(e);var n=a(17),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"module的加载实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module的加载实现"}},[s._v("#")]),s._v(" Module的加载实现")]),s._v(" "),a("h2",{attrs:{id:"浏览器加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器加载"}},[s._v("#")]),s._v(" 浏览器加载")]),s._v(" "),a("h3",{attrs:{id:"_1-传统方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-传统方法"}},[s._v("#")]),s._v(" 1. 传统方法")]),s._v(" "),a("p",[s._v("HTML 网页中，浏览器通过"),a("code",[s._v("<script>")]),s._v("标签加载 JavaScript 脚本。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\x3c!-- 页面内嵌的脚本 --\x3e\n<script type="application/javascript">\n  // module code\n<\/script>\n\n\x3c!-- 外部脚本 --\x3e\n<script type="application/javascript" src="path/to/myModule.js">\n<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v('上面代码中，由于浏览器脚本的默认语言是 JavaScript，因此type="application/javascript"可以省略。')]),s._v(" "),a("p",[s._v("默认情况下，浏览器是同步加载 JavaScript 脚本，即渲染引擎遇到"),a("code",[s._v("<script>")]),s._v("标签就会停下来，等到执行完脚本，再继续向下渲染。如果是外部脚本，还必须加入脚本下载的时间。")]),s._v(" "),a("p",[s._v("如果脚本体积很大，下载和执行的时间就会很长，因此造成浏览器堵塞，用户会感觉到浏览器“卡死”了，没有任何响应。这显然是很不好的体验，所以浏览器允许脚本异步加载，下面就是两种异步加载的语法。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script src="path/to/myModule.js" defer><\/script>\n<script src="path/to/myModule.js" async><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面代码中，"),a("code",[s._v("<script>")]),s._v("标签打开defer或async属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行，而是直接执行后面的命令。")]),s._v(" "),a("p",[s._v("defer与async的区别是：defer要等到整个页面在内存中正常渲染结束（DOM 结构完全生成，以及其他脚本执行完成），才会执行；async一旦下载完，渲染引擎就会中断渲染，执行这个脚本以后，再继续渲染。一句话，defer是“渲染完再执行”，async是“下载完就执行”。另外，如果有多个defer脚本，会按照它们在页面出现的顺序加载，而多个async脚本是不能保证加载顺序的。")]),s._v(" "),a("h3",{attrs:{id:"_2-加载规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-加载规则"}},[s._v("#")]),s._v(" 2. 加载规则")]),s._v(" "),a("p",[s._v("浏览器加载 ES6 模块，也使用"),a("code",[s._v("<script>")]),s._v('标签，但是要加入type="module"属性。')]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="module" src="./foo.js"><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上面代码在网页中插入一个模块foo.js，由于type属性设为module，所以浏览器知道这是一个 ES6 模块。")]),s._v(" "),a("p",[s._v('浏览器对于带有type="module"的'),a("code",[s._v("<script>")]),s._v("，都是异步加载，不会造成堵塞浏览器，即等到整个页面渲染完，再执行模块脚本，等同于打开了"),a("code",[s._v("<script>")]),s._v("标签的defer属性。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="module" src="./foo.js"><\/script>\n\x3c!-- 等同于 --\x3e\n<script type="module" src="./foo.js" defer><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果网页有多个"),a("code",[s._v('<script type="module">')]),s._v("，它们会按照在页面出现的顺序依次执行。")]),s._v(" "),a("p",[a("code",[s._v("<script>")]),s._v("标签的async属性也可以打开，这时只要加载完成，渲染引擎就会中断渲染立即执行。执行完成后，再恢复渲染。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="module" src="./foo.js" async><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("一旦使用了async属性，"),a("code",[s._v('<script type="module">')]),s._v("就不会按照在页面出现的顺序执行，而是只要该模块加载完成，就执行该模块。")]),s._v(" "),a("p",[s._v("ES6 模块也允许内嵌在网页中，语法行为与加载外部脚本完全一致。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="module">\n  import utils from "./utils.js";\n\n  // other code\n<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("对于外部的模块脚本（上例是foo.js），有几点需要注意。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("代码是在模块作用域之中运行，而不是在全局作用域运行。模块内部的顶层变量，外部不可见。")])]),s._v(" "),a("li",[a("p",[s._v("模块脚本自动采用严格模式，不管有没有声明use strict。")])]),s._v(" "),a("li",[a("p",[s._v("模块之中，可以使用import命令加载其他模块（.js后缀不可省略，需要提-供绝对 URL 或相对 URL），也可以使用export命令输出对外接口。")])]),s._v(" "),a("li",[a("p",[s._v("模块之中，顶层的this关键字返回undefined，而不是指向window。也就是说，在模块顶层使用this关键字，是无意义的。")])]),s._v(" "),a("li",[a("p",[s._v("同一个模块如果加载多次，将只执行一次。")])])]),s._v(" "),a("p",[s._v("下面是一个示例模块。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import utils from 'https://example.com/js/utils.js';\n\nconst x = 1;\n\nconsole.log(x === window.x); //false\nconsole.log(this === undefined); // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("利用顶层的this等于undefined这个语法点，可以侦测当前代码是否在 ES6 模块之中。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const isNotModuleScript = this !== undefined;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"es6-模块与-commonjs-模块的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块与-commonjs-模块的差异"}},[s._v("#")]),s._v(" ES6 模块与 CommonJS 模块的差异")]),s._v(" "),a("p",[s._v("讨论 Node.js 加载 ES6 模块之前，必须了解 ES6 模块与 CommonJS 模块完全不同。")]),s._v(" "),a("p",[s._v("它们有三个重大差异。")]),s._v(" "),a("ul",[a("li",[s._v("CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。")]),s._v(" "),a("li",[s._v("CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。")]),s._v(" "),a("li",[s._v("CommonJS 模块的require()是同步加载模块，ES6 模块的import命令是异步加载，有一个独立的模块依赖的解析阶段。")])]),s._v(" "),a("h3",{attrs:{id:"_1-第一个差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一个差异"}},[s._v("#")]),s._v(" 1.第一个差异")]),s._v(" "),a("p",[s._v("CommonJS 模块输出的是值的拷贝，也就是说，一旦输出一个值，模块内部的变化就影响不到这个值。请看下面这个模块文件"),a("code",[s._v("lib.js")]),s._v("的例子。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// lib.js\nvar counter = 3;\nfunction incCounter() {\n  counter++;\n}\nmodule.exports = {\n  counter: counter,\n  incCounter: incCounter,\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("上面代码输出内部变量"),a("code",[s._v("counter")]),s._v("和改写这个变量的内部方法"),a("code",[s._v("incCounter")]),s._v("。然后，在"),a("code",[s._v("main.js")]),s._v("里面加载这个模块。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// main.js\nvar mod = require('./lib');\n\nconsole.log(mod.counter);  // 3\nmod.incCounter();\nconsole.log(mod.counter); // 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("ES6 模块的运行机制与 CommonJS 不一样。JS 引擎对脚本静态分析的时候，遇到模块加载命令import，就会生成一个只读引用。等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值。换句话说，ES6 的import有点像 Unix 系统的“符号连接”，原始值变了，import加载的值也会跟着变。因此，ES6 模块是动态引用，并且不会缓存值，模块里面的变量绑定其所在的模块。")]),s._v(" "),a("p",[s._v("还是举上面的例子。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// lib.js\nexport let counter = 3;\nexport function incCounter() {\n  counter++;\n}\n\n// main.js\nimport { counter, incCounter } from './lib';\nconsole.log(counter); // 3\nincCounter();\nconsole.log(counter); // 4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("上面代码说明，ES6 模块输入的变量counter是活的，完全反应其所在模块lib.js内部的变化。")]),s._v(" "),a("p",[s._v("再举一个出现在export一节中的例子。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// m1.js\nexport var foo = 'bar';\nsetTimeout(() => foo = 'baz', 500);\n\n// m2.js\nimport {foo} from './m1.js';\nconsole.log(foo);\nsetTimeout(() => console.log(foo), 500);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("让我们看看，"),a("code",[s._v("m2.js")]),s._v("能否正确读取这个变化。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ babel-node m2.js\n\nbar\nbaz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("由于 ES6 输入的模块变量，只是一个“符号连接”，所以这个变量是只读的，对它进行重新赋值会报错。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// lib.js\nexport let obj = {};\n\n// main.js\nimport { obj } from './lib';\n\nobj.prop = 123; // OK\nobj = {}; // TypeError\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_2-第二个差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-第二个差异"}},[s._v("#")]),s._v(" 2.第二个差异")]),s._v(" "),a("p",[s._v("第二个差异是因为 CommonJS 加载的是一个对象（即"),a("code",[s._v("module.exports")]),s._v("属性），该对象只有在脚本运行完才会生成。而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。")]),s._v(" "),a("h2",{attrs:{id:"node-js-的模块加载方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-的模块加载方法"}},[s._v("#")]),s._v(" Node.js 的模块加载方法")]),s._v(" "),a("h3",{attrs:{id:"_1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1.概述")]),s._v(" "),a("p",[s._v("JavaScript 现在有两种模块。一种是 ES6 模块，简称 ESM；另一种是 CommonJS 模块，简称 CJS。")]),s._v(" "),a("p",[s._v("CommonJS 模块是 Node.js 专用的，与 ES6 模块不兼容。语法上面，两者最明显的差异是，CommonJS 模块使用"),a("code",[s._v("require()")]),s._v("和"),a("code",[s._v("module.exports")]),s._v("，ES6 模块使用"),a("code",[s._v("import")]),s._v("和"),a("code",[s._v("export")]),s._v("。")]),s._v(" "),a("p",[s._v("它们采用不同的加载方案。从 Node.js v13.2 版本开始，Node.js 已经默认打开了 ES6 模块支持。")]),s._v(" "),a("p",[s._v("Node.js 要求 ES6 模块采用"),a("code",[s._v(".mjs")]),s._v("后缀文件名。也就是说，只要脚本文件里面使用"),a("code",[s._v("import")]),s._v("或者"),a("code",[s._v("export")]),s._v("命令，那么就必须采用"),a("code",[s._v(".mjs")]),s._v("后缀名。Node.js 遇到"),a("code",[s._v(".mjs")]),s._v('文件，就认为它是 ES6 模块，默认启用严格模式，不必在每个模块文件顶部指定"use strict"。')]),s._v(" "),a("p",[s._v("如果不希望将后缀名改成"),a("code",[s._v(".mjs")]),s._v("，可以在项目的"),a("code",[s._v("package.json")]),s._v("文件中，指定"),a("code",[s._v("type")]),s._v("字段为"),a("code",[s._v("module")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n   "type": "module"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("一旦设置了以后，该项目的 JS 脚本，就被解释成 ES6 模块。")]),s._v(" "),a("div",{staticClass:"language-module line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 解释成 ES6 模块\n$ node my-app.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果这时还要使用 CommonJS 模块，那么需要将 CommonJS 脚本的后缀名都改成"),a("code",[s._v(".cjs")]),s._v("。如果没有"),a("code",[s._v("type")]),s._v("字段，或者"),a("code",[s._v("type")]),s._v("字段为"),a("code",[s._v("commonjs")]),s._v("，则"),a("code",[s._v(".js")]),s._v("脚本会被解释成 "),a("code",[s._v("CommonJS")]),s._v(" 模块。")]),s._v(" "),a("p",[s._v("总结为一句话："),a("code",[s._v(".mjs")]),s._v("文件总是以 "),a("code",[s._v("ES6")]),s._v(" 模块加载，"),a("code",[s._v(".cjs")]),s._v("文件总是以 "),a("code",[s._v("CommonJS")]),s._v(" 模块加载，"),a("code",[s._v(".js")]),s._v("文件的加载取决于"),a("code",[s._v("package.json")]),s._v("里面"),a("code",[s._v("type")]),s._v("字段的设置。")]),s._v(" "),a("p",[s._v("注意，ES6 模块与 CommonJS 模块尽量不要混用。"),a("code",[s._v("require")]),s._v("命令不能加载"),a("code",[s._v(".mjs")]),s._v("文件，会报错，只有"),a("code",[s._v("import")]),s._v("命令才可以加载"),a("code",[s._v(".mjs")]),s._v("文件。反过来，"),a("code",[s._v(".mjs")]),s._v("文件里面也不能使用"),a("code",[s._v("require")]),s._v("命令，必须使用"),a("code",[s._v("import")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_2-package-json-的-main-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-package-json-的-main-字段"}},[s._v("#")]),s._v(" 2.package.json 的 main 字段")]),s._v(" "),a("p",[a("code",[s._v("package.json")]),s._v("文件有两个字段可以指定模块的入口文件："),a("code",[s._v("main")]),s._v("和"),a("code",[s._v("exports")]),s._v("。比较简单的模块，可以只使用"),a("code",[s._v("main")]),s._v("字段，指定模块加载的入口文件。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// ./node_modules/es-module-package/package.json\n{\n  "type": "module",\n  "main": "./src/index.js"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("上面代码指定项目的入口脚本为"),a("code",[s._v("./src/index.js")]),s._v("，它的格式为 ES6 模块。如果没有"),a("code",[s._v("type")]),s._v("字段，"),a("code",[s._v("index.js")]),s._v("就会被解释为 CommonJS 模块。")]),s._v(" "),a("p",[s._v("然后，"),a("code",[s._v("import")]),s._v("命令就可以加载这个模块。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// ./my-app.mjs\n\nimport { something } from 'es-module-package';\n// 实际加载的是 ./node_modules/es-module-package/src/index.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面代码中，运行该脚本以后，Node.js 就会到"),a("code",[s._v("./node_modules")]),s._v("目录下面，寻找"),a("code",[s._v("es-module-package")]),s._v("模块，然后根据该模块"),a("code",[s._v("package.json")]),s._v("的"),a("code",[s._v("main")]),s._v("字段去执行入口文件。")]),s._v(" "),a("p",[s._v("这时，如果用 CommonJS 模块的"),a("code",[s._v("require()")]),s._v("命令去加载"),a("code",[s._v("es-module-package")]),s._v("模块会报错，因为 CommonJS 模块不能处理"),a("code",[s._v("export")]),s._v("命令。")]),s._v(" "),a("h3",{attrs:{id:"_3-package-json-的-exports-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-package-json-的-exports-字段"}},[s._v("#")]),s._v(" 3.package.json 的 exports 字段")]),s._v(" "),a("p",[a("code",[s._v("exports")]),s._v("字段的优先级高于"),a("code",[s._v("main")]),s._v("字段。它有多种用法。")]),s._v(" "),a("h4",{attrs:{id:"_1-子目录别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-子目录别名"}},[s._v("#")]),s._v(" （1）子目录别名")]),s._v(" "),a("p",[a("code",[s._v("package.json")]),s._v("文件的"),a("code",[s._v("exports")]),s._v("字段可以指定脚本或子目录的别名。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// ./node_modules/es-module-package/package.json\n{\n  "exports": {\n    "./submodule": "./src/submodule.js"\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("上面的代码指定"),a("code",[s._v("src/submodule.js")]),s._v("别名为"),a("code",[s._v("submodule")]),s._v("，然后就可以从别名加载这个文件。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import submodule from 'es-module-package/submodule';\n// 加载 ./node_modules/es-module-package/src/submodule.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("下面是子目录别名的例子。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// ./node_modules/es-module-package/package.json\n{\n  "exports": {\n    "./features/": "./src/features/"\n  }\n}\n\nimport feature from \'es-module-package/features/x.js\';\n// 加载 ./node_modules/es-module-package/src/features/x.js\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("如果没有指定别名，就不能用“模块+脚本名”这种形式加载脚本。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 报错\nimport submodule from 'es-module-package/private-module.js';\n\n// 不报错\nimport submodule from './node_modules/es-module-package/private-module.js';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"_2-main-的别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-main-的别名"}},[s._v("#")]),s._v(" （2）main 的别名")]),s._v(" "),a("p",[a("code",[s._v("exports")]),s._v("字段的别名如果是.，就代表模块的主入口，优先级高于"),a("code",[s._v("main")]),s._v("字段，并且可以直接简写成"),a("code",[s._v("exports")]),s._v("字段的值。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "exports": {\n    ".": "./main.js"\n  }\n}\n\n// 等同于\n{\n  "exports": "./main.js"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("由于"),a("code",[s._v("exports")]),s._v("字段只有支持 ES6 的 Node.js 才认识，所以可以用来兼容旧版本的 Node.js。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "main": "./main-legacy.cjs",\n  "exports": {\n    ".": "./main-modern.cjs"\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("上面代码中，老版本的 Node.js （不支持 ES6 模块）的入口文件是"),a("code",[s._v("main-legacy.cjs")]),s._v("，新版本的 Node.js 的入口文件是"),a("code",[s._v("main-modern.cjs")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"_3-条件加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-条件加载"}},[s._v("#")]),s._v(" （3）条件加载")]),s._v(" "),a("p",[s._v("利用"),a("code",[s._v(".")]),s._v("这个别名，可以为 ES6 模块和 CommonJS 指定不同的入口。目前，这个功能需要在 Node.js 运行的时候，打开"),a("code",[s._v("--experimental-conditional-exports")]),s._v("标志。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "type": "module",\n  "exports": {\n    ".": {\n      "require": "./main.cjs",\n      "default": "./main.js"\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("上面代码中，别名"),a("code",[s._v(".")]),s._v("的"),a("code",[s._v("require")]),s._v("条件指定"),a("code",[s._v("require()")]),s._v("命令的入口文件（即 CommonJS 的入口），"),a("code",[s._v("default")]),s._v("条件指定其他情况的入口（即 ES6 的入口）。")]),s._v(" "),a("p",[s._v("上面的写法可以简写如下。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "exports": {\n    "require": "./main.cjs",\n    "default": "./main.js"\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("注意，如果同时还有其他别名，就不能采用简写，否则会报错。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  // 报错\n  "exports": {\n    "./feature": "./lib/feature.js",\n    "require": "./main.cjs",\n    "default": "./main.js"\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"commonjs-和-es6-互相加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-和-es6-互相加载"}},[s._v("#")]),s._v(" CommonJS 和 ES6 互相加载")]),s._v(" "),a("h3",{attrs:{id:"_1-commonjs-模块加载-es6-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-commonjs-模块加载-es6-模块"}},[s._v("#")]),s._v(" 1. CommonJS 模块加载 ES6 模块")]),s._v(" "),a("p",[s._v("CommonJS 的"),a("code",[s._v("require()")]),s._v("命令不能加载 ES6 模块，会报错，只能使用"),a("code",[s._v("import()")]),s._v("这个方法加载。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("(async () => {\n  await import('./my-app.mjs');\n})();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("上面代码可以在 CommonJS 模块中运行。")]),s._v(" "),a("p",[a("code",[s._v("require()")]),s._v("不支持 ES6 模块的一个原因是，它是同步加载，而 ES6 模块内部可以使用顶层"),a("code",[s._v("await")]),s._v("命令，导致无法被同步加载。")]),s._v(" "),a("h3",{attrs:{id:"_2-es6-模块加载-commonjs-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-es6-模块加载-commonjs-模块"}},[s._v("#")]),s._v(" 2.ES6 模块加载 CommonJS 模块")]),s._v(" "),a("p",[s._v("ES6 模块的"),a("code",[s._v("import")]),s._v("命令可以加载 CommonJS 模块，但是只能整体加载，不能只加载单一的输出项。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 正确\nimport packageMain from 'commonjs-package';\n\n// 报错\nimport { method } from 'commonjs-package';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这是因为 ES6 模块需要支持静态代码分析，而 CommonJS 模块的输出接口是"),a("code",[s._v("module.exports")]),s._v("，是一个对象，无法被静态分析，所以只能整体加载。")]),s._v(" "),a("p",[s._v("加载单一的输出项，可以写成下面这样。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import packageMain from 'commonjs-package';\nconst { method } = packageMain;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-同时支持两种格式的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-同时支持两种格式的模块"}},[s._v("#")]),s._v(" 3.同时支持两种格式的模块")]),s._v(" "),a("p",[s._v("一个模块同时要支持 CommonJS 和 ES6 两种格式，也很容易。")]),s._v(" "),a("p",[s._v("如果原始模块是 ES6 格式，那么需要给出一个整体输出接口，比如"),a("code",[s._v("export default obj")]),s._v("，使得 CommonJS 可以用"),a("code",[s._v("import()")]),s._v("进行加载。")]),s._v(" "),a("p",[s._v("如果原始模块是 CommonJS 格式，那么可以加一个包装层。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import cjsModule from '../index.js';\nexport const foo = cjsModule.foo;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面代码先整体输入 CommonJS 模块，然后再根据需要输出具名接口。")]),s._v(" "),a("p",[s._v("你可以把这个文件的后缀名改为"),a("code",[s._v(".mjs")]),s._v("，或者将它放在一个子目录，再在这个子目录里面放一个单独的"),a("code",[s._v("package.jso")]),s._v("n文件，指明"),a("code",[s._v('{ type: "module" }')]),s._v("。")]),s._v(" "),a("p",[s._v("另一种做法是在"),a("code",[s._v("package.json")]),s._v("文件的"),a("code",[s._v("exports")]),s._v("字段，指明两种格式模块各自的加载入口。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('"exports"：{\n  "require": "./index.js"，\n  "import": "./esm/wrapper.js"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面代码指定"),a("code",[s._v("require()")]),s._v("和"),a("code",[s._v("import")]),s._v("，加载该模块会自动切换到不一样的入口文件。")]),s._v(" "),a("h3",{attrs:{id:"_4-node-js-的内置模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-node-js-的内置模块"}},[s._v("#")]),s._v(" 4.Node.js 的内置模块")]),s._v(" "),a("p",[s._v("Node.js 的内置模块可以整体加载，也可以加载指定的输出项。")]),s._v(" "),a("div",{staticClass:"language-m line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 整体加载\nimport EventEmitter from 'events';\nconst e = new EventEmitter();\n\n// 加载指定的输出项\nimport { readFile } from 'fs';\nreadFile('./foo.txt', (err, source) => {\n  if (err) {\n    console.error(err);\n  } else {\n    console.log(source);\n  }\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);