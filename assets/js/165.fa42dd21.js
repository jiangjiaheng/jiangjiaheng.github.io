(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{482:function(e,s,t){"use strict";t.r(s);var a=t(17),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"object-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object-对象"}},[e._v("#")]),e._v(" Object 对象")]),e._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("JavaScript 的所有其他对象都继承自Object对象，即那些对象都是Object的实例。")])]),e._v(" "),t("li",[t("p",[e._v("Object对象的原生方法分成两类：Object本身的方法与Object的实例方法。")])])]),e._v(" "),t("p",[e._v("所谓“本身的方法”就是直接定义在Object对象的方法。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Object.print = function (o) { console.log(o) };\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("所谓实例方法就是定义在Object原型对象Object.prototype上的方法。它可以被Object实例直接使用。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Object.prototype.print = function () {\n  console.log(this);\n};\n\nvar obj = new Object();\nobj.print() // Object\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h2",{attrs:{id:"object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[e._v("#")]),e._v(" Object()")]),e._v(" "),t("p",[e._v("Object本身是一个函数，可以当作工具方法使用，将任意值转为对象。")]),e._v(" "),t("p",[e._v("如果参数为空（或者为undefined和null），Object()返回一个空对象。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = Object();\n// 等同于\nvar obj = Object(undefined);\nvar obj = Object(null);\n\nobj instanceof Object // true\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("如果参数是原始类型的值，Object方法将其转为对应的包装对象的实例。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = Object(1);\nobj instanceof Object // true\nobj instanceof Number // true\n\nvar obj = Object('foo');\nobj instanceof Object // true\nobj instanceof String // true\n\nvar obj = Object(true);\nobj instanceof Object // true\nobj instanceof Boolean // true\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("如果Object方法的参数是一个对象，它总是返回该对象，即不用转换。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var arr = [];\nvar obj = Object(arr); // 返回原数组\nobj === arr // true\n\nvar value = {};\nvar obj = Object(value) // 返回原对象\nobj === value // true\n\nvar fn = function () {};\nvar obj = Object(fn); // 返回原函数\nobj === fn // true\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("利用这一点，可以写一个判断变量是否为对象的函数。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function isObject(value) {\n  return value === Object(value);\n}\n\nisObject([]) // true\nisObject(true) // false\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h2",{attrs:{id:"object构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object构造函数"}},[e._v("#")]),e._v(" Object构造函数")]),e._v(" "),t("p",[e._v("Object构造函数的首要用途，是直接通过它来生成新对象。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = new Object();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("blockquote",[t("p",[e._v("注意，通过var obj = new Object()的写法生成新对象，与字面量的写法var obj = {}是等价的。或者说，后者只是前者的一种简便写法。")])]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var o1 = {a: 1};\nvar o2 = new Object(o1);\no1 === o2 // true\n\nvar obj = new Object(123);\nobj instanceof Number // true\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h2",{attrs:{id:"object静态方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object静态方法"}},[e._v("#")]),e._v(" Object静态方法")]),e._v(" "),t("h3",{attrs:{id:"_1-keys-getownpropertynames"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-keys-getownpropertynames"}},[e._v("#")]),e._v(" 1. keys(), getOwnPropertyNames()")]),e._v(" "),t("p",[e._v("Object.keys方法的参数是一个对象，返回一个数组。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var obj = {\n  p1: 123,\n  p2: 456\n};\n\nObject.keys(obj) // ["p1", "p2"]\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("Object.getOwnPropertyNames方法与Object.keys类似。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var obj = {\n  p1: 123,\n  p2: 456\n};\n\nObject.getOwnPropertyNames(obj) // ["p1", "p2"]\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("数组的length属性是不可枚举的属性，所以只出现在Object.getOwnPropertyNames方法的返回结果中。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var a = [\'Hello\', \'World\'];\n\nObject.keys(a) // ["0", "1"]\nObject.getOwnPropertyNames(a) // ["0", "1", "length"]\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("由于 JavaScript 没有提供计算对象属性个数的方法，所以可以用这两个方法代替。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = {\n  p1: 123,\n  p2: 456\n};\n\nObject.keys(obj).length // 2\nObject.getOwnPropertyNames(obj).length // 2\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h3",{attrs:{id:"_2-其他方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-其他方法"}},[e._v("#")]),e._v(" 2. 其他方法")]),e._v(" "),t("p",[e._v("（1）对象属性模型的相关方法")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Object.getOwnPropertyDescriptor()：获取某个属性的描述对象。")])]),e._v(" "),t("li",[t("p",[e._v("Object.defineProperty()：通过描述对象，定义某个属性。")])]),e._v(" "),t("li",[t("p",[e._v("Object.defineProperties()：通过描述对象，定义多个属性。")])])]),e._v(" "),t("p",[e._v("（2）控制对象状态的方法")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Object.preventExtensions()：防止对象扩展。")])]),e._v(" "),t("li",[t("p",[e._v("Object.isExtensible()：判断对象是否可扩展。")])]),e._v(" "),t("li",[t("p",[e._v("Object.seal()：禁止对象配置。")])]),e._v(" "),t("li",[t("p",[e._v("Object.isSealed()：判断一个对象是否可配置。")])]),e._v(" "),t("li",[t("p",[e._v("Object.freeze()：冻结一个对象。")])]),e._v(" "),t("li",[t("p",[e._v("Object.isFrozen()：判断一个对象是否被冻结。")])])]),e._v(" "),t("p",[e._v("（3）原型链相关方法")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Object.create()：该方法可以指定原型对象和属性，返回一个新的对象。")])]),e._v(" "),t("li",[t("p",[e._v("Object.getPrototypeOf()：获取对象的Prototype对象。")])])]),e._v(" "),t("h2",{attrs:{id:"object实例方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object实例方法"}},[e._v("#")]),e._v(" Object实例方法")]),e._v(" "),t("h3",{attrs:{id:"_1-valueof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-valueof"}},[e._v("#")]),e._v(" 1. valueOf()")]),e._v(" "),t("p",[e._v("valueOf方法的作用是返回一个对象的“值”，默认情况下返回对象本身。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = new Object();\nobj.valueOf() === obj // true\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("valueOf方法的主要用途是，JavaScript 自动类型转换时会默认调用这个方法。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var obj = new Object();\n1 + obj // "1[object Object]"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = new Object();\nobj.valueOf = function () {\n  return 2;\n};\n\n1 + obj // 3\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h3",{attrs:{id:"_2-tostring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-tostring"}},[e._v("#")]),e._v(" 2. toString()")]),e._v(" "),t("p",[e._v("toString方法的作用是返回一个对象的字符串形式，默认情况下返回类型字符串。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var o1 = new Object();\no1.toString() // "[object Object]"\n\nvar o2 = {a:1};\no2.toString() // "[object Object]"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("字符串[object Object]本身没有太大的用处，但是通过自定义toString方法，可以让对象在自动类型转换时，得到想要的字符串形式。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = new Object();\n\nobj.toString = function () {\n  return 'hello';\n};\n\nobj + ' ' + 'world' // \"hello world\"\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h3",{attrs:{id:"_3-tostring判断数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-tostring判断数据类型"}},[e._v("#")]),e._v(" 3. toString判断数据类型")]),e._v(" "),t("p",[e._v("Object.prototype.toString方法返回对象的类型字符串，因此可以用来判断一个值的类型。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var obj = {};\nobj.toString() // "[object Object]"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("blockquote",[t("p",[e._v("上面代码调用空对象的toString方法，结果返回一个字符串object Object，其中第二个Object表示该值的构造函数。这是一个十分有用的判断数据类型的方法。")])]),e._v(" "),t("p",[e._v("这就是说，Object.prototype.toString可以看出一个值到底是什么类型。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('Object.prototype.toString.call(2) // "[object Number]"\nObject.prototype.toString.call(\'\') // "[object String]"\nObject.prototype.toString.call(true) // "[object Boolean]"\nObject.prototype.toString.call(undefined) // "[object Undefined]"\nObject.prototype.toString.call(null) // "[object Null]"\nObject.prototype.toString.call(Math) // "[object Math]"\nObject.prototype.toString.call({}) // "[object Object]"\nObject.prototype.toString.call([]) // "[object Array]"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h3",{attrs:{id:"_4-tolocalestring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-tolocalestring"}},[e._v("#")]),e._v(" 4. toLocaleString()")]),e._v(" "),t("p",[e._v("Object.prototype.toLocaleString方法与toString的返回结果相同，也是返回一个值的字符串形式。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var obj = {};\nobj.toString(obj) // "[object Object]"\nobj.toLocaleString(obj) // "[object Object]"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("这个方法的主要作用是留出一个接口，让各种不同的对象实现自己版本的toLocaleString，用来返回针对某些地域的特定的值。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var date = new Date();\ndate.toString() // "Tue Jan 01 2018 12:01:33 GMT+0800 (CST)"\ndate.toLocaleString() // "1/01/2018, 12:01:33 PM"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("h3",{attrs:{id:"_5-hasownproperty"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-hasownproperty"}},[e._v("#")]),e._v(" 5. hasOwnProperty()")]),e._v(" "),t("p",[e._v("Object.prototype.hasOwnProperty方法接受一个字符串作为参数，返回一个布尔值，表示该实例对象自身是否具有该属性。")]),e._v(" "),t("div",{staticClass:"language-object line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var obj = {\n  p: 123\n};\n\nobj.hasOwnProperty('p') // true\nobj.hasOwnProperty('toString') // false\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);