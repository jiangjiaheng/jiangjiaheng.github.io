(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{481:function(a,s,n){"use strict";n.r(s);var e=n(17),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"array-对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#array-对象"}},[a._v("#")]),a._v(" Array 对象")]),a._v(" "),n("h2",{attrs:{id:"构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[a._v("#")]),a._v(" 构造函数")]),a._v(" "),n("p",[a._v("不建议使用Array生成新数组，直接使用数组字面量是更好的做法。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("// bad\nvar arr = new Array(1, 2);\n\n// good\nvar arr = [1, 2];\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("h2",{attrs:{id:"静态方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[a._v("#")]),a._v(" 静态方法")]),a._v(" "),n("p",[a._v("Array.isArray方法返回一个布尔值，表示参数是否为数组。它可以弥补typeof运算符的不足。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('var arr = [1, 2, 3];\n\ntypeof arr // "object"\nArray.isArray(arr) // true\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("h2",{attrs:{id:"实例方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[a._v("#")]),a._v(" 实例方法")]),a._v(" "),n("h3",{attrs:{id:"_1-valueof-tostring"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-valueof-tostring"}},[a._v("#")]),a._v(" 1. valueOf, toString")]),a._v(" "),n("ul",[n("li",[a._v("数组的valueOf方法返回数组本身。")])]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var arr = [1, 2, 3];\narr.valueOf() // [1, 2, 3]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("ul",[n("li",[a._v("数组的toString方法返回数组的字符串形式。")])]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('var arr = [1, 2, 3];\narr.toString() // "1,2,3"\n\nvar arr = [1, 2, 3, [4, 5, 6]];\narr.toString() // "1,2,3,4,5,6"\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("h3",{attrs:{id:"_2-push-pop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-push-pop"}},[a._v("#")]),a._v(" 2. push, pop")]),a._v(" "),n("p",[a._v("push方法用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var arr = [];\n\narr.push(1) // 1\narr.push('a') // 2\narr.push(true, {}) // 4\narr // [1, 'a', true, {}]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("p",[a._v("pop方法用于删除数组的最后一个元素，并返回该元素。注意，该方法会改变原数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var arr = ['a', 'b', 'c'];\n\narr.pop() // 'c'\narr // ['a', 'b']\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("h3",{attrs:{id:"_3-shift-unshift"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-shift-unshift"}},[a._v("#")]),a._v(" 3. shift, unshift")]),a._v(" "),n("p",[a._v("shift()方法用于删除数组的第一个元素，并返回该元素。注意，该方法会改变原数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = ['a', 'b', 'c'];\n\na.shift() // 'a'\na // ['b', 'c']\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("unshift()方法用于在数组的第一个位置添加元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = ['a', 'b', 'c'];\n\na.unshift('x'); // 4\na // ['x', 'a', 'b', 'c']\n\nvar arr = [ 'c', 'd' ];\narr.unshift('a', 'b') // 4\narr // [ 'a', 'b', 'c', 'd' ]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("h3",{attrs:{id:"_4-join"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-join"}},[a._v("#")]),a._v(" 4. join")]),a._v(" "),n("p",[a._v("join()方法以指定参数作为分隔符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = [1, 2, 3, 4];\n\na.join(' ') // '1 2 3 4'\na.join(' | ') // \"1 | 2 | 3 | 4\"\na.join() // \"1,2,3,4\"\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("如果数组成员是undefined或null或空位，会被转成空字符串。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("[undefined, null].join('#')\n// '#'\n\n['a',, 'b'].join('-')\n// 'a--b'\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("通过call方法，这个方法也可以用于字符串或类似数组的对象。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("Array.prototype.join.call('hello', '-')\n// \"h-e-l-l-o\"\n\nvar obj = { 0: 'a', 1: 'b', length: 2 };\nArray.prototype.join.call(obj, '-')\n// 'a-b'\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("h3",{attrs:{id:"_5-concat"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-concat"}},[a._v("#")]),a._v(" 5. concat")]),a._v(" "),n("p",[a._v("concat方法用于多个数组的合并。它将新数组的成员，添加到原数组成员的后部，然后返回一个新数组，原数组不变。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("['hello'].concat(['world'])\n// [\"hello\", \"world\"]\n\n['hello'].concat(['world'], ['!'])\n// [\"hello\", \"world\", \"!\"]\n\n[].concat({a: 1}, {b: 2})\n// [{ a: 1 }, { b: 2 }]\n\n[2].concat({a: 1})\n// [2, {a: 1}]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("p",[a._v("除了数组作为参数，concat也接受其他类型的值作为参数，添加到目标数组尾部。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("[1, 2, 3].concat(4, 5, 6)\n// [1, 2, 3, 4, 5, 6]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("h3",{attrs:{id:"_6-reverse"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-reverse"}},[a._v("#")]),a._v(" 6. reverse")]),a._v(" "),n("p",[a._v("reverse方法用于颠倒排列数组元素，返回改变后的数组。注意，该方法将改变原数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('var a = [\'a\', \'b\', \'c\'];\n\na.reverse() // ["c", "b", "a"]\na // ["c", "b", "a"]\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("h3",{attrs:{id:"_7-slice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-slice"}},[a._v("#")]),a._v(" 7. slice")]),a._v(" "),n("p",[a._v("slice方法用于提取目标数组的一部分，返回一个新数组，原数组不变。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("arr.slice(start, end);\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("它的第一个参数为起始位置（从0开始），第二个参数为终止位置（但该位置的元素本身不包括在内）。如果省略第二个参数，则一直返回到原数组的最后一个成员。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('var a = [\'a\', \'b\', \'c\'];\n\na.slice(0) // ["a", "b", "c"]\na.slice(1) // ["b", "c"]\na.slice(1, 2) // ["b"]\na.slice(2, 6) // ["c"]\na.slice() // ["a", "b", "c"]\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("p",[a._v("上面代码中，最后一个例子slice没有参数，实际上等于返回一个原数组的拷贝。")]),a._v(" "),n("p",[a._v("如果slice方法的参数是负数，则表示倒数计算的位置。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = ['a', 'b', 'c'];\na.slice(-2) // [\"b\", \"c\"]\na.slice(-2, -1) // [\"b\"]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("h3",{attrs:{id:"_8-splice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-splice"}},[a._v("#")]),a._v(" 8. splice")]),a._v(" "),n("p",[a._v("splice方法用于删除原数组的一部分成员，并可以在删除的位置添加新的数组成员，返回值是被删除的元素。注意，该方法会改变原数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("arr.splice(start, count, addElement1, addElement2, ...);\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("splice的第一个参数是删除的起始位置（从0开始），第二个参数是被删除的元素个数。如果后面还有更多的参数，则表示这些就是要被插入数组的新元素。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = ['a', 'b', 'c', 'd', 'e', 'f'];\na.splice(4, 2) // [\"e\", \"f\"]\na // [\"a\", \"b\", \"c\", \"d\"]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("p",[a._v("上面代码从原数组4号位置，删除了两个数组成员。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = ['a', 'b', 'c', 'd', 'e', 'f'];\na.splice(4, 2, 1, 2) // [\"e\", \"f\"]\na // [\"a\", \"b\", \"c\", \"d\", 1, 2]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("p",[a._v("起始位置如果是负数，就表示从倒数位置开始删除。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = ['a', 'b', 'c', 'd', 'e', 'f'];\na.splice(-4, 2) // [\"c\", \"d\"]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("h3",{attrs:{id:"_9-sort"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-sort"}},[a._v("#")]),a._v(" 9. sort")]),a._v(" "),n("p",[a._v("sort方法对数组成员进行排序，默认是按照字典顺序排序。排序后，原数组将被改变。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("['d', 'c', 'b', 'a'].sort()\n// ['a', 'b', 'c', 'd']\n\n[4, 3, 2, 1].sort()\n// [1, 2, 3, 4]\n\n[11, 101].sort()\n// [101, 11]\n\n[10111, 1101, 111].sort()\n// [10111, 1101, 111]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("p",[a._v("如果想让sort方法按照自定义方式排序，可以传入一个函数作为参数。")]),a._v(" "),n("div",{staticClass:"language-arr line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("[10111, 1101, 111].sort(function (a, b) {\n  return a - b;\n})\n// [111, 1101, 10111]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("h3",{attrs:{id:"_10-map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-map"}},[a._v("#")]),a._v(" 10. map")]),a._v(" "),n("p",[a._v("map方法将数组的所有成员依次传入参数函数，然后把每一次的执行结果组成一个新数组返回。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var numbers = [1, 2, 3];\n\nnumbers.map(function (n) {\n  return n + 1;\n});\n// [2, 3, 4]\n\nnumbers\n// [1, 2, 3]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br")])]),n("h3",{attrs:{id:"_11-foreach"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-foreach"}},[a._v("#")]),a._v(" 11 forEach")]),a._v(" "),n("p",[a._v("forEach的用法与map方法一致，参数是一个函数，该函数同样接受三个参数：当前值、当前位置、整个数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("function log(element, index, array) {\n  console.log('[' + index + '] = ' + element);\n}\n\n[2, 5, 9].forEach(log);\n// [0] = 2\n// [1] = 5\n// [2] = 9\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("p",[a._v("forEach方法也会跳过数组的空位。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var log = function (n) {\n  console.log(n + 1);\n};\n\n[1, undefined, 2].forEach(log)\n// 2\n// NaN\n// 3\n\n[1, null, 2].forEach(log)\n// 2\n// 1\n// 3\n\n[1, , 2].forEach(log)\n// 2\n// 3\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br")])]),n("p",[a._v("上面代码中，forEach方法不会跳过undefined和null，但会跳过空位。")]),a._v(" "),n("h3",{attrs:{id:"_12-filter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-filter"}},[a._v("#")]),a._v(" 12. filter")]),a._v(" "),n("p",[a._v("filter方法用于过滤数组成员，满足条件的成员组成一个新数组返回。")]),a._v(" "),n("p",[a._v("它的参数是一个函数，所有数组成员依次执行该函数，返回结果为true的成员组成一个新数组返回。该方法不会改变原数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("[1, 2, 3, 4, 5].filter(function (elem) {\n  return (elem > 3);\n})\n// [4, 5]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("filter方法的参数函数可以接受三个参数：当前成员，当前位置和整个数组。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("[1, 2, 3, 4, 5].filter(function (elem, index, arr) {\n  return index % 2 === 0;\n});\n// [1, 3, 5]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("h3",{attrs:{id:"_13-some-every"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-some-every"}},[a._v("#")]),a._v(" 13. some, every")]),a._v(" "),n("p",[a._v("some方法是只要一个成员的返回值是true，则整个some方法的返回值就是true，否则返回false。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var arr = [1, 2, 3, 4, 5];\narr.some(function (elem, index, arr) {\n  return elem >= 3;\n});\n// true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("every方法是所有成员的返回值都是true，整个every方法才返回true，否则返回false。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var arr = [1, 2, 3, 4, 5];\narr.every(function (elem, index, arr) {\n  return elem >= 3;\n});\n// false\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("h3",{attrs:{id:"_14-reduce-reduceright"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-reduce-reduceright"}},[a._v("#")]),a._v(" 14. reduce, reduceRight")]),a._v(" "),n("p",[a._v("reduce方法和reduceRight方法依次处理数组的每个成员，最终累计为一个值。它们的差别是，reduce是从左到右处理（从第一个成员到最后一个成员），reduceRight则是从右到左（从最后一个成员到第一个成员），其他完全一样。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("[1, 2, 3, 4, 5].reduce(function (a, b) {\n  console.log(a, b);\n  return a + b;\n})\n// 1 2\n// 3 3\n// 6 4\n// 10 5\n//最后结果：15\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br")])]),n("p",[a._v("下面是一个reduceRight方法的例子。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("function subtract(prev, cur) {\n  return prev - cur;\n}\n\n[3, 2, 1].reduce(subtract) // 0\n[3, 2, 1].reduceRight(subtract) // -4\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("h3",{attrs:{id:"_15-indexof-lastindexof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_15-indexof-lastindexof"}},[a._v("#")]),a._v(" 15. indexOf, lastIndexOf")]),a._v(" "),n("p",[a._v("indexOf方法返回给定元素在数组中第一次出现的位置，如果没有出现则返回-1。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = ['a', 'b', 'c'];\n\na.indexOf('b') // 1\na.indexOf('y') // -1\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("indexOf方法还可以接受第二个参数，表示搜索的开始位置。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("['a', 'b', 'c'].indexOf('a', 1) // -1\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("lastIndexOf方法返回给定元素在数组中最后一次出现的位置，如果没有出现则返回-1。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var a = [2, 5, 9, 2];\na.lastIndexOf(2) // 3\na.lastIndexOf(7) // -1\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("p",[a._v("注意，这两个方法不能用来搜索NaN的位置，即它们无法确定数组成员是否包含NaN。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("[NaN].indexOf(NaN) // -1\n[NaN].lastIndexOf(NaN) // -1\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("h3",{attrs:{id:"_16-链式使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16-链式使用"}},[a._v("#")]),a._v(" 16. 链式使用")]),a._v(" "),n("p",[a._v("上面这些数组方法之中，有不少返回的还是数组，所以可以链式使用。")]),a._v(" "),n("div",{staticClass:"language-ar line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var users = [\n  {name: 'tom', email: 'tom@example.com'},\n  {name: 'peter', email: 'peter@example.com'}\n];\n\nusers\n.map(function (user) {\n  return user.email;\n})\n.filter(function (email) {\n  return /^t/.test(email);\n})\n.forEach(function (email) {\n  console.log(email);\n});\n// \"tom@example.com\"\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br")])]),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),n("h3",{attrs:{id:"_1-改变原数组的实例方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-改变原数组的实例方法"}},[a._v("#")]),a._v(" 1. 改变原数组的实例方法")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("push")])]),a._v(" "),n("li",[n("p",[a._v("pop")])]),a._v(" "),n("li",[n("p",[a._v("shift")])]),a._v(" "),n("li",[n("p",[a._v("unshift")])]),a._v(" "),n("li",[n("p",[a._v("reverse")])]),a._v(" "),n("li",[n("p",[a._v("splice")])]),a._v(" "),n("li",[n("p",[a._v("sort")])])]),a._v(" "),n("h3",{attrs:{id:"_2-返回新数组的实例方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-返回新数组的实例方法"}},[a._v("#")]),a._v(" 2. 返回新数组的实例方法")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("concat")])]),a._v(" "),n("li",[n("p",[a._v("slice")])]),a._v(" "),n("li",[n("p",[a._v("map")])])]),a._v(" "),n("p",[a._v("-filter")]),a._v(" "),n("h3",{attrs:{id:"_3-返回其他值的实例方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-返回其他值的实例方法"}},[a._v("#")]),a._v(" 3. 返回其他值的实例方法")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("valueOf")])]),a._v(" "),n("li",[n("p",[a._v("toString")])]),a._v(" "),n("li",[n("p",[a._v("join")])]),a._v(" "),n("li",[n("p",[a._v("some")])]),a._v(" "),n("li",[n("p",[a._v("every")])]),a._v(" "),n("li",[n("p",[a._v("reduce")])]),a._v(" "),n("li",[n("p",[a._v("reduceRight")])]),a._v(" "),n("li",[n("p",[a._v("indexOf")])]),a._v(" "),n("li",[n("p",[a._v("lastIndexOf")])])]),a._v(" "),n("h3",{attrs:{id:"_4-不返回值的实例方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-不返回值的实例方法"}},[a._v("#")]),a._v(" 4. 不返回值的实例方法")]),a._v(" "),n("ul",[n("li",[a._v("forEach")])])])}),[],!1,null,null,null);s.default=r.exports}}]);