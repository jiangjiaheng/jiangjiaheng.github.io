(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{456:function(e,t,s){"use strict";s.r(t);var n=s(17),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"element-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element-节点"}},[e._v("#")]),e._v(" Element 节点")]),e._v(" "),s("p",[e._v("Element节点对象对应网页的 HTML 元素。每一个 HTML 元素，在 DOM 树上都会转化成一个Element节点对象（以下简称元素节点）。")]),e._v(" "),s("p",[e._v("元素节点的nodeType属性都是1。")]),e._v(" "),s("div",{staticClass:"language-node line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var p = document.querySelector('p');\np.nodeName // \"P\"\np.nodeType // 1\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("Element对象继承了Node接口，因此Node的属性和方法在Element对象都存在。此外，不同的 HTML 元素对应的元素节点是不一样的，浏览器使用不同的构造函数，生成不同的元素节点，比如"),s("code",[e._v("<a>")]),e._v("元素的节点对象由HTMLAnchorElement构造函数生成，"),s("code",[e._v("<button>")]),e._v("元素的节点对象由HTMLButtonElement构造函数生成。因此，元素节点不是一种对象，而是一组对象，这些对象除了继承Element的属性和方法，还有各自构造函数的属性和方法。")]),e._v(" "),s("h2",{attrs:{id:"实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[e._v("#")]),e._v(" 实例属性")]),e._v(" "),s("h3",{attrs:{id:"_1-元素特性的相关属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-元素特性的相关属性"}},[e._v("#")]),e._v(" 1. 元素特性的相关属性")]),e._v(" "),s("h4",{attrs:{id:"_1-element-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-element-id"}},[e._v("#")]),e._v(" （1）Element.id")]),e._v(" "),s("p",[e._v("Element.id属性返回指定元素的id属性，该属性可读写。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码为 <p id="foo">\nvar p = document.querySelector(\'p\');\np.id // "foo"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("注意，id属性的值是大小写敏感，即浏览器能正确识别"),s("code",[e._v('<p id="foo">')]),e._v("和"),s("code",[e._v('<p id="FOO">')]),e._v("这两个元素的id属性，但是最好不要这样命名。")]),e._v(" "),s("h4",{attrs:{id:"_2-element-tagname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-element-tagname"}},[e._v("#")]),e._v(" （2）Element.tagName")]),e._v(" "),s("p",[e._v("Element.tagName属性返回指定元素的大写标签名，与nodeName属性的值相等。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML代码为\n// <span id="myspan">Hello</span>\nvar span = document.getElementById(\'myspan\');\nspan.id // "myspan"\nspan.tagName // "SPAN"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h4",{attrs:{id:"_3-element-dir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-element-dir"}},[e._v("#")]),e._v(" （3）Element.dir")]),e._v(" "),s("p",[e._v('Element.dir属性用于读写当前元素的文字方向，可能是从左到右（"ltr"），也可能是从右到左（"rtl"）。')]),e._v(" "),s("h4",{attrs:{id:"_4-element-accesskey"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-element-accesskey"}},[e._v("#")]),e._v(" （4）Element.accessKey")]),e._v(" "),s("p",[e._v("Element.accessKey属性用于读写分配给当前元素的快捷键。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码如下\n// <button accesskey="h" id="btn">点击</button>\nvar btn = document.getElementById(\'btn\');\nbtn.accessKey // "h"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("上面代码中，btn元素的快捷键是h，按下Alt + h就能将焦点转移到它上面。")]),e._v(" "),s("h4",{attrs:{id:"_5-element-draggable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-element-draggable"}},[e._v("#")]),e._v(" （5）Element.draggable")]),e._v(" "),s("p",[e._v("Element.draggable属性返回一个布尔值，表示当前元素是否可拖动。该属性可读写。")]),e._v(" "),s("h4",{attrs:{id:"_6-element-lang"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-element-lang"}},[e._v("#")]),e._v(" （6）Element.lang")]),e._v(" "),s("p",[e._v("Element.lang属性返回当前元素的语言设置。该属性可读写。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码如下\n// <html lang="en">\ndocument.documentElement.lang // "en"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h4",{attrs:{id:"_7-element-tabindex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-element-tabindex"}},[e._v("#")]),e._v(" （7）Element.tabIndex")]),e._v(" "),s("p",[e._v("Element.tabIndex属性返回一个整数，表示当前元素在 Tab 键遍历时的顺序。该属性可读写。")]),e._v(" "),s("p",[e._v("tabIndex属性值如果是负值（通常是-1），则 Tab 键不会遍历到该元素。如果是正整数，则按照顺序，从小到大遍历。如果两个元素的tabIndex属性的正整数值相同，则按照出现的顺序遍历。遍历完所有tabIndex为正整数的元素以后，再遍历所有tabIndex等于0、或者属性值是非法值、或者没有tabIndex属性的元素，顺序为它们在网页中出现的顺序。")]),e._v(" "),s("h4",{attrs:{id:"_8-element-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-element-title"}},[e._v("#")]),e._v(" （8）Element.title")]),e._v(" "),s("p",[e._v("Element.title属性用来读写当前元素的 HTML 属性title。该属性通常用来指定，鼠标悬浮时弹出的文字提示框。")]),e._v(" "),s("h3",{attrs:{id:"_2-元素状态的相关属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-元素状态的相关属性"}},[e._v("#")]),e._v(" 2. 元素状态的相关属性")]),e._v(" "),s("h4",{attrs:{id:"_1-element-hidden"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-element-hidden"}},[e._v("#")]),e._v(" （1）Element.hidden")]),e._v(" "),s("p",[e._v("Element.hidden属性返回一个布尔值，表示当前元素的hidden属性，用来控制当前元素是否可见。该属性可读写。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var btn = document.getElementById('btn');\nvar mydiv = document.getElementById('mydiv');\n\nbtn.addEventListener('click', function () {\n  mydiv.hidden = !mydiv.hidden;\n}, false);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("注意，该属性与 CSS 设置是互相独立的。CSS 对这个元素可见性的设置，Element.hidden并不能反映出来。也就是说，这个属性并不能用来判断当前元素的实际可见性。")]),e._v(" "),s("p",[e._v("CSS 的设置高于Element.hidden。如果 CSS 指定了该元素不可见（display: none）或可见（display: hidden），那么Element.hidden并不能改变该元素实际的可见性。换言之，这个属性只在 CSS 没有明确设定当前元素的可见性时才有效。")]),e._v(" "),s("h4",{attrs:{id:"_2-element-contenteditable-element-iscontenteditable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-element-contenteditable-element-iscontenteditable"}},[e._v("#")]),e._v(" （2）Element.contentEditable，Element.isContentEditable")]),e._v(" "),s("p",[e._v("HTML 元素可以设置contentEditable属性，使得元素的内容可以编辑。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<div contenteditable>123</div>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("上面代码中，"),s("code",[e._v("<div>")]),e._v("元素有contenteditable属性，因此用户可以在网页上编辑这个区块的内容。")]),e._v(" "),s("p",[e._v("Element.contentEditable属性返回一个字符串，表示是否设置了contenteditable属性，有三种可能的值。该属性可写。")]),e._v(" "),s("ul",[s("li",[e._v('"true"：元素内容可编辑')]),e._v(" "),s("li",[e._v('"false"：元素内容不可编辑')]),e._v(" "),s("li",[e._v('"inherit"：元素是否可编辑，继承了父元素的设置')])]),e._v(" "),s("p",[e._v("Element.isContentEditable属性返回一个布尔值，同样表示是否设置了contenteditable属性。该属性只读。")]),e._v(" "),s("h3",{attrs:{id:"_3-element-attributes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-element-attributes"}},[e._v("#")]),e._v(" 3. Element.attributes")]),e._v(" "),s("p",[e._v("Element.attributes属性返回一个类似数组的对象，成员是当前元素节点的所有属性节点，详见《属性的操作》一章。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var p = document.querySelector('p');\nvar attrs = p.attributes;\n\nfor (var i = attrs.length - 1; i >= 0; i--) {\n  console.log(attrs[i].name + '->' + attrs[i].value);\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("上面代码遍历p元素的所有属性。")]),e._v(" "),s("h3",{attrs:{id:"_4-element-classname-element-classlist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-element-classname-element-classlist"}},[e._v("#")]),e._v(" 4. Element.className，Element.classList")]),e._v(" "),s("p",[e._v("className属性用来读写当前元素节点的class属性。它的值是一个字符串，每个class之间用空格分割。")]),e._v(" "),s("p",[e._v("classList属性返回一个类似数组的对象，当前元素节点的每个class就是这个对象的一个成员。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码 <div class="one two three" id="myDiv"></div>\nvar div = document.getElementById(\'myDiv\');\n\ndiv.className\n// "one two three"\n\ndiv.classList\n// {\n//   0: "one"\n//   1: "two"\n//   2: "three"\n//   length: 3\n// }\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("p",[e._v("上面代码中，className属性返回一个空格分隔的字符串，而classList属性指向一个类似数组的对象，该对象的length属性（只读）返回当前元素的class数量。")]),e._v(" "),s("p",[e._v("classList对象有下列方法。")]),e._v(" "),s("ul",[s("li",[e._v("add()：增加一个 class。")]),e._v(" "),s("li",[e._v("remove()：移除一个 class。")]),e._v(" "),s("li",[e._v("contains()：检查当前元素是否包含某个 class。")]),e._v(" "),s("li",[e._v("toggle()：将某个 class 移入或移出当前元素。")]),e._v(" "),s("li",[e._v("item()：返回指定索引位置的 class。")]),e._v(" "),s("li",[e._v("toString()：将 class 的列表转为字符串。")])]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var div = document.getElementById('myDiv');\n\ndiv.classList.add('myCssClass');\ndiv.classList.add('foo', 'bar');\ndiv.classList.remove('myCssClass');\ndiv.classList.toggle('myCssClass'); // 如果 myCssClass 不存在就加入，否则移除\ndiv.classList.contains('myCssClass'); // 返回 true 或者 false\ndiv.classList.item(0); // 返回第一个 Class\ndiv.classList.toString();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("p",[e._v("下面比较一下，className和classList在添加和删除某个 class 时的写法。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var foo = document.getElementById('foo');\n\n// 添加class\nfoo.className += 'bold';\nfoo.classList.add('bold');\n\n// 删除class\nfoo.classList.remove('bold');\nfoo.className = foo.className.replace(/^bold$/, '');\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("p",[e._v("toggle方法可以接受一个布尔值，作为第二个参数。如果为true，则添加该属性；如果为false，则去除该属性。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("el.classList.toggle('abc', boolValue);\n\n// 等同于\nif (boolValue) {\n  el.classList.add('abc');\n} else {\n  el.classList.remove('abc');\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("h3",{attrs:{id:"_5-element-dataset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-element-dataset"}},[e._v("#")]),e._v(" 5. Element.dataset")]),e._v(" "),s("p",[e._v("网页元素可以自定义data-属性，用来添加数据。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<div data-timestamp="1522907809292"></div>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("上面代码中，"),s("code",[e._v("<div>")]),e._v("元素有一个自定义的data-timestamp属性，用来为该元素添加一个时间戳。")]),e._v(" "),s("p",[e._v("Element.dataset属性返回一个对象，可以从这个对象读写data-属性。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// <article\n//   id="foo"\n//   data-columns="3"\n//   data-index-number="12314"\n//   data-parent="cars">\n//   ...\n// </article>\nvar article = document.getElementById(\'foo\');\narticle.dataset.columns // "3"\narticle.dataset.indexNumber // "12314"\narticle.dataset.parent // "cars"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("p",[e._v("注意，dataset上面的各个属性返回都是字符串。")]),e._v(" "),s("p",[e._v("HTML 代码中，data-属性的属性名，只能包含英文字母、数字、连词线（-）、点（.）、冒号（:）和下划线（_）。它们转成 JavaScript 对应的dataset属性名，规则如下。")]),e._v(" "),s("ul",[s("li",[e._v("开头的data-会省略。")]),e._v(" "),s("li",[e._v("如果连词线后面跟了一个英文字母，那么连词线会取消，该字母变成大写。")]),e._v(" "),s("li",[e._v("其他字符不变。")])]),e._v(" "),s("p",[e._v('因此，data-abc-def对应dataset.abcDef，data-abc-1对应dataset["abc-1"]。')]),e._v(" "),s("p",[e._v("除了使用dataset读写data-属性，也可以使用Element.getAttribute()和Element.setAttribute()，通过完整的属性名读写这些属性。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var mydiv = document.getElementById('mydiv');\n\nmydiv.dataset.foo = 'bar';\nmydiv.getAttribute('data-foo') // \"bar\"\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h3",{attrs:{id:"_6-element-innerhtml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-element-innerhtml"}},[e._v("#")]),e._v(" 6. Element.innerHTML")]),e._v(" "),s("p",[e._v("Element.innerHTML属性返回一个字符串，等同于该元素包含的所有 HTML 代码。该属性可读写，常用来设置某个节点的内容。它能改写所有元素节点的内容，包括"),s("code",[e._v("<HTML>")]),e._v("和"),s("code",[e._v("<body>")]),e._v("元素。")]),e._v(" "),s("p",[e._v("如果将innerHTML属性设为空，等于删除所有它包含的所有节点。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("el.innerHTML = '';\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("上面代码等于将el节点变成了一个空节点，el原来包含的节点被全部删除。")]),e._v(" "),s("p",[e._v("注意，读取属性值的时候，如果文本节点包含&、小于号（<）和大于号（>），innerHTML属性会将它们转为实体形式"),s("code",[e._v("&amp;")]),e._v("、"),s("code",[e._v("&lt;")]),e._v("、"),s("code",[e._v("&gt;")]),e._v("。如果想得到原文，建议使用element.textContent属性。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// HTML代码如下 <p id=\"para\"> 5 > 3 </p>\ndocument.getElementById('para').innerHTML\n// 5 &gt; 3\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("写入的时候，如果插入的文本包含 HTML 标签，会被解析成为节点对象插入 DOM。注意，如果文本之中含有"),s("code",[e._v("<script>")]),e._v("标签，虽然可以生成script节点，但是插入的代码不会执行。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var name = \"<script>alert('haha')<\/script>\";\nel.innerHTML = name;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("上面代码将脚本插入内容，脚本并不会执行。但是，innerHTML还是有安全风险的。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('var name = "<img src=x onerror=alert(1)>";\nel.innerHTML = name;\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("上面代码中，alert方法是会执行的。因此为了安全考虑，如果插入的是文本，最好用textContent属性代替innerHTML。")]),e._v(" "),s("h3",{attrs:{id:"_7-element-outerhtml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-element-outerhtml"}},[e._v("#")]),e._v(" 7. Element.outerHTML")]),e._v(" "),s("p",[e._v("Element.outerHTML属性返回一个字符串，表示当前元素节点的所有 HTML 代码，包括该元素本身和所有子元素。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// HTML 代码如下\n// <div id=\"d\"><p>Hello</p></div>\nvar d = document.getElementById('d');\nd.outerHTML\n// '<div id=\"d\"><p>Hello</p></div>'\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("outerHTML属性是可读写的，对它进行赋值，等于替换掉当前元素。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码如下\n// <div id="container"><div id="d">Hello</div></div>\nvar container = document.getElementById(\'container\');\nvar d = document.getElementById(\'d\');\ncontainer.firstChild.nodeName // "DIV"\nd.nodeName // "DIV"\n\nd.outerHTML = \'<p>Hello</p>\';\ncontainer.firstChild.nodeName // "P"\nd.nodeName // "DIV"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("上面代码中，变量d代表子节点，它的outerHTML属性重新赋值以后，内层的div元素就不存在了，被p元素替换了。但是，变量d依然指向原来的div元素，这表示被替换的DIV元素还存在于内存中。")]),e._v(" "),s("p",[e._v("注意，如果一个节点没有父节点，设置outerHTML属性会报错。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var div = document.createElement('div');\ndiv.outerHTML = '<p>test</p>';\n// DOMException: This element has no parent node.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("上面代码中，div元素没有父节点，设置outerHTML属性会报错。")]),e._v(" "),s("h3",{attrs:{id:"_8-element-clientheight-element-clientwidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-element-clientheight-element-clientwidth"}},[e._v("#")]),e._v(" 8. Element.clientHeight，Element.clientWidth")]),e._v(" "),s("p",[e._v("Element.clientHeight属性返回一个整数值，表示元素节点的 CSS 高度（单位像素），只对块级元素生效，对于行内元素返回0。如果块级元素没有设置 CSS 高度，则返回实际高度。")]),e._v(" "),s("p",[e._v("除了元素本身的高度，它还包括padding部分，但是不包括border、margin。如果有水平滚动条，还要减去水平滚动条的高度。注意，这个值始终是整数，如果是小数会被四舍五入。")]),e._v(" "),s("p",[e._v("Element.clientWidth属性返回元素节点的 CSS 宽度，同样只对块级元素有效，也是只包括元素本身的宽度和padding，如果有垂直滚动条，还要减去垂直滚动条的宽度。")]),e._v(" "),s("p",[e._v("document.documentElement的clientHeight属性，返回当前视口的高度（即浏览器窗口的高度），等同于window.innerHeight属性减去水平滚动条的高度（如果有的话）。document.body的高度则是网页的实际高度。一般来说，document.body.clientHeight大于document.documentElement.clientHeight。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 视口高度\ndocument.documentElement.clientHeight\n\n// 网页总高度\ndocument.body.clientHeight\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h3",{attrs:{id:"_9-element-clientleft-element-clienttop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-element-clientleft-element-clienttop"}},[e._v("#")]),e._v(" 9. Element.clientLeft，Element.clientTop")]),e._v(" "),s("p",[e._v("Element.clientLeft属性等于元素节点左边框（left border）的宽度（单位像素），不包括左侧的padding和margin。如果没有设置左边框，或者是行内元素（display: inline），该属性返回0。该属性总是返回整数值，如果是小数，会四舍五入。")]),e._v(" "),s("p",[e._v("Element.clientTop属性等于网页元素顶部边框的宽度（单位像素），其他特点都与clientLeft相同。")]),e._v(" "),s("h3",{attrs:{id:"_10-element-scrollheight-element-scrollwidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-element-scrollheight-element-scrollwidth"}},[e._v("#")]),e._v(" 10. Element.scrollHeight，Element.scrollWidth")]),e._v(" "),s("p",[e._v("Element.scrollHeight属性返回一个整数值（小数会四舍五入），表示当前元素的总高度（单位像素），包括溢出容器、当前不可见的部分。它包括padding，但是不包括border、margin以及水平滚动条的高度（如果有水平滚动条的话），还包括伪元素（::before或::after）的高度。")]),e._v(" "),s("p",[e._v("Element.scrollWidth属性表示当前元素的总宽度（单位像素），其他地方都与scrollHeight属性类似。这两个属性只读。")]),e._v(" "),s("p",[e._v("整张网页的总高度可以从document.documentElement或document.body上读取。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 返回网页的总高度\ndocument.documentElement.scrollHeight\ndocument.body.scrollHeight\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("注意，如果元素节点的内容出现溢出，即使溢出的内容是隐藏的，scrollHeight属性仍然返回元素的总高度。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码如下\n// <div id="myDiv" style="height: 200px; overflow: hidden;">...<div>\ndocument.getElementById(\'myDiv\').scrollHeight // 356\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("上面代码中，即使myDiv元素的 CSS 高度只有200像素，且溢出部分不可见，但是scrollHeight仍然会返回该元素的原始高度。")]),e._v(" "),s("h3",{attrs:{id:"_11-element-scrollleft-element-scrolltop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-element-scrollleft-element-scrolltop"}},[e._v("#")]),e._v(" 11. Element.scrollLeft，Element.scrollTop")]),e._v(" "),s("p",[e._v("Element.scrollLeft属性表示当前元素的水平滚动条向右侧滚动的像素数量，Element.scrollTop属性表示当前元素的垂直滚动条向下滚动的像素数量。对于那些没有滚动条的网页元素，这两个属性总是等于0。")]),e._v(" "),s("p",[e._v("如果要查看整张网页的水平的和垂直的滚动距离，要从document.documentElement元素上读取。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("document.documentElement.scrollLeft\ndocument.documentElement.scrollTop\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("这两个属性都可读写，设置该属性的值，会导致浏览器将当前元素自动滚动到相应的位置。")]),e._v(" "),s("h3",{attrs:{id:"_12-element-offsetparent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-element-offsetparent"}},[e._v("#")]),e._v(" 12. Element.offsetParent")]),e._v(" "),s("p",[e._v("Element.offsetParent属性返回最靠近当前元素的、并且 CSS 的position属性不等于static的上层元素。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<div style="position: absolute;">\n  <p>\n    <span>Hello</span>\n  </p>\n</div>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("上面代码中，span元素的offsetParent属性就是div元素。")]),e._v(" "),s("p",[e._v("该属性主要用于确定子元素位置偏移的计算基准，Element.offsetTop和Element.offsetLeft就是offsetParent元素计算的。")]),e._v(" "),s("p",[e._v("如果该元素是不可见的（display属性为none），或者位置是固定的（position属性为fixed），则offsetParent属性返回null。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<div style="position: absolute;">\n  <p>\n    <span style="display: none;">Hello</span>\n  </p>\n</div>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("上面代码中，span元素的offsetParent属性是null。")]),e._v(" "),s("p",[e._v("如果某个元素的所有上层节点的position属性都是static，则Element.offsetParent属性指向"),s("code",[e._v("<body>")]),e._v("元素。")]),e._v(" "),s("h3",{attrs:{id:"_13-element-offsetheight-element-offsetwidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-element-offsetheight-element-offsetwidth"}},[e._v("#")]),e._v(" 13. Element.offsetHeight，Element.offsetWidth")]),e._v(" "),s("p",[e._v("Element.offsetHeight属性返回一个整数，表示元素的 CSS 垂直高度（单位像素），包括元素本身的高度、padding 和 border，以及水平滚动条的高度（如果存在滚动条）。")]),e._v(" "),s("p",[e._v("Element.offsetWidth属性表示元素的 CSS 水平宽度（单位像素），其他都与Element.offsetHeight一致。")]),e._v(" "),s("p",[e._v("这两个属性都是只读属性，只比Element.clientHeight和Element.clientWidth多了边框的高度或宽度。如果元素的 CSS 设为不可见（比如display: none;），则返回0。")]),e._v(" "),s("h3",{attrs:{id:"_14-element-offsetleft-element-offsettop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-element-offsetleft-element-offsettop"}},[e._v("#")]),e._v(" 14. Element.offsetLeft，Element.offsetTop")]),e._v(" "),s("p",[e._v("Element.offsetLeft返回当前元素左上角相对于Element.offsetParent节点的水平位移，Element.offsetTop返回垂直位移，单位为像素。通常，这两个值是指相对于父节点的位移。")]),e._v(" "),s("p",[e._v("下面的代码可以算出元素左上角相对于整张网页的坐标。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function getElementPosition(e) {\n  var x = 0;\n  var y = 0;\n  while (e !== null)  {\n    x += e.offsetLeft;\n    y += e.offsetTop;\n    e = e.offsetParent;\n  }\n  return {x: x, y: y};\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("h3",{attrs:{id:"_15-element-style"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-element-style"}},[e._v("#")]),e._v(" 15. Element.style")]),e._v(" "),s("p",[e._v("每个元素节点都有style用来读写该元素的行内样式信息，具体介绍参见《CSS 操作》一章。")]),e._v(" "),s("h3",{attrs:{id:"_16-element-children-element-childelementcount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-element-children-element-childelementcount"}},[e._v("#")]),e._v(" 16. Element.children，Element.childElementCount")]),e._v(" "),s("p",[e._v("Element.children属性返回一个类似数组的对象（HTMLCollection实例），包括当前元素节点的所有子元素。如果当前元素没有子元素，则返回的对象包含零个成员。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("if (para.children.length) {\n  var children = para.children;\n    for (var i = 0; i < children.length; i++) {\n      // ...\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("上面代码遍历了para元素的所有子元素。")]),e._v(" "),s("p",[e._v("这个属性与Node.childNodes属性的区别是，它只包括元素类型的子节点，不包括其他类型的子节点。")]),e._v(" "),s("p",[e._v("Element.childElementCount属性返回当前元素节点包含的子元素节点的个数，与Element.children.length的值相同。")]),e._v(" "),s("h3",{attrs:{id:"_17-element-firstelementchild-element-lastelementchild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-element-firstelementchild-element-lastelementchild"}},[e._v("#")]),e._v(" 17. Element.firstElementChild，Element.lastElementChild")]),e._v(" "),s("p",[e._v("Element.firstElementChild属性返回当前元素的第一个元素子节点，Element.lastElementChild返回最后一个元素子节点。")]),e._v(" "),s("p",[e._v("如果没有元素子节点，这两个属性返回null。")]),e._v(" "),s("h3",{attrs:{id:"_18-element-nextelementsibling-element-previouselementsibling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-element-nextelementsibling-element-previouselementsibling"}},[e._v("#")]),e._v(" 18. Element.nextElementSibling，Element.previousElementSibling")]),e._v(" "),s("p",[e._v("Element.nextElementSibling属性返回当前元素节点的后一个同级元素节点，如果没有则返回null。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码如下\n// <div id="div-01">Here is div-01</div>\n// <div id="div-02">Here is div-02</div>\nvar el = document.getElementById(\'div-01\');\nel.nextElementSibling\n// <div id="div-02">Here is div-02</div>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("Element.previousElementSibling属性返回当前元素节点的前一个同级元素节点，如果没有则返回null。")]),e._v(" "),s("h2",{attrs:{id:"实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[e._v("#")]),e._v(" 实例方法")]),e._v(" "),s("h3",{attrs:{id:"_1-属性相关方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-属性相关方法"}},[e._v("#")]),e._v(" 1. 属性相关方法")]),e._v(" "),s("p",[e._v("元素节点提供六个方法，用来操作属性。")]),e._v(" "),s("ul",[s("li",[e._v("getAttribute()：读取某个属性的值")]),e._v(" "),s("li",[e._v("getAttributeNames()：返回当前元素的所有属性名")]),e._v(" "),s("li",[e._v("setAttribute()：写入属性值")]),e._v(" "),s("li",[e._v("hasAttribute()：某个属性是否存在")]),e._v(" "),s("li",[e._v("hasAttributes()：当前元素是否有属性")]),e._v(" "),s("li",[e._v("removeAttribute()：删除属性")])]),e._v(" "),s("p",[e._v("这些方法的介绍请看《属性的操作》一章。")]),e._v(" "),s("h3",{attrs:{id:"_2-element-queryselector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-element-queryselector"}},[e._v("#")]),e._v(" 2. Element.querySelector()")]),e._v(" "),s("p",[e._v("Element.querySelector方法接受 CSS 选择器作为参数，返回父元素的第一个匹配的子元素。如果没有找到匹配的子元素，就返回null。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var content = document.getElementById('content');\nvar el = content.querySelector('p');\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("上面代码返回content节点的第一个p元素。")]),e._v(" "),s("p",[e._v("Element.querySelector方法可以接受任何复杂的 CSS 选择器。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("document.body.querySelector(\"style[type='text/css'], style:not([type])\");\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("注意，这个方法无法选中伪元素。")]),e._v(" "),s("p",[e._v("它可以接受多个选择器，它们之间使用逗号分隔。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("element.querySelector('div, p')\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("上面代码返回element的第一个div或p子元素。")]),e._v(" "),s("p",[e._v("需要注意的是，浏览器执行querySelector方法时，是先在全局范围内搜索给定的 CSS 选择器，然后过滤出哪些属于当前元素的子元素。因此，会有一些违反直觉的结果，下面是一段 HTML 代码。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<div>\n<blockquote id="outer">\n  <p>Hello</p>\n  <div id="inner">\n    <p>World</p>\n  </div>\n</blockquote>\n</div>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[e._v("那么，像下面这样查询的话，实际上返回的是第一个p元素，而不是第二个。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var outer = document.getElementById('outer');\nouter.querySelector('div p')\n// <p>Hello</p>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h3",{attrs:{id:"_3-element-queryselectorall"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-element-queryselectorall"}},[e._v("#")]),e._v(" 3. Element.querySelectorAll()")]),e._v(" "),s("p",[e._v("Element.querySelectorAll方法接受 CSS 选择器作为参数，返回一个NodeList实例，包含所有匹配的子元素。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var el = document.querySelector('#test');\nvar matches = el.querySelectorAll('div.highlighted > p');\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("该方法的执行机制与querySelector方法相同，也是先在全局范围内查找，再过滤出当前元素的子元素。因此，选择器实际上针对整个文档的。")]),e._v(" "),s("p",[e._v("它也可以接受多个 CSS 选择器，它们之间使用逗号分隔。如果选择器里面有伪元素的选择器，则总是返回一个空的NodeList实例。")]),e._v(" "),s("h3",{attrs:{id:"_4-element-getelementsbyclassname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-element-getelementsbyclassname"}},[e._v("#")]),e._v(" 4. Element.getElementsByClassName()")]),e._v(" "),s("p",[e._v("Element.getElementsByClassName方法返回一个HTMLCollection实例，成员是当前元素节点的所有具有指定 class 的子元素节点。该方法与document.getElementsByClassName方法的用法类似，只是搜索范围不是整个文档，而是当前元素节点。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("element.getElementsByClassName('red test');\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("注意，该方法的参数大小写敏感。")]),e._v(" "),s("p",[e._v("由于HTMLCollection实例是一个活的集合，document对象的任何变化会立刻反应到实例，下面的代码不会生效。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码如下\n// <div id="example">\n//   <p class="foo"></p>\n//   <p class="foo"></p>\n// </div>\nvar element = document.getElementById(\'example\');\nvar matches = element.getElementsByClassName(\'foo\');\n\nfor (var i = 0; i< matches.length; i++) {\n  matches[i].classList.remove(\'foo\');\n  matches.item(i).classList.add(\'bar\');\n}\n// 执行后，HTML 代码如下\n// <div id="example">\n//   <p></p>\n//   <p class="foo bar"></p>\n// </div>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("p",[e._v("上面代码中，matches集合的第一个成员，一旦被拿掉 class 里面的foo，就会立刻从matches里面消失，导致出现上面的结果。")]),e._v(" "),s("h3",{attrs:{id:"_5-element-getelementsbytagname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-element-getelementsbytagname"}},[e._v("#")]),e._v(" 5. Element.getElementsByTagName()")]),e._v(" "),s("p",[e._v("Element.getElementsByTagName方法返回一个HTMLCollection实例，成员是当前节点的所有匹配指定标签名的子元素节点。该方法与document.getElementsByClassName方法的用法类似，只是搜索范围不是整个文档，而是当前元素节点。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var table = document.getElementById('forecast-table');\nvar cells = table.getElementsByTagName('td');\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("注意，该方法的参数是大小写不敏感的。")]),e._v(" "),s("h3",{attrs:{id:"_6-element-closest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-element-closest"}},[e._v("#")]),e._v(" 6. Element.closest()")]),e._v(" "),s("p",[e._v("Element.closest方法接受一个 CSS 选择器作为参数，返回匹配该选择器的、最接近当前节点的一个祖先节点（包括当前节点本身）。如果没有任何节点匹配 CSS 选择器，则返回null。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码如下\n// <article>\n//   <div id="div-01">Here is div-01\n//     <div id="div-02">Here is div-02\n//       <div id="div-03">Here is div-03</div>\n//     </div>\n//   </div>\n// </article>\n\nvar div03 = document.getElementById(\'div-03\');\n\n// div-03 最近的祖先节点\ndiv03.closest("#div-02") // div-02\ndiv03.closest("div div") // div-03\ndiv03.closest("article > div") //div-01\ndiv03.closest(":not(div)") // article\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("p",[e._v("上面代码中，由于closest方法将当前节点也考虑在内，所以第二个closest方法返回div-03。")]),e._v(" "),s("h3",{attrs:{id:"_7-element-matches"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-element-matches"}},[e._v("#")]),e._v(" 7. Element.matches()")]),e._v(" "),s("p",[e._v("Element.matches方法返回一个布尔值，表示当前元素是否匹配给定的 CSS 选择器。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("if (el.matches('.someClass')) {\n  console.log('Match!');\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h3",{attrs:{id:"_8-事件相关方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-事件相关方法"}},[e._v("#")]),e._v(" 8. 事件相关方法")]),e._v(" "),s("p",[e._v("以下三个方法与Element节点的事件相关。这些方法都继承自EventTarget接口，详见相关章节。")]),e._v(" "),s("ul",[s("li",[e._v("Element.addEventListener()：添加事件的回调函数")]),e._v(" "),s("li",[e._v("Element.removeEventListener()：移除事件监听函数")]),e._v(" "),s("li",[e._v("Element.dispatchEvent()：触发事件")])]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("element.addEventListener('click', listener, false);\nelement.removeEventListener('click', listener, false);\n\nvar event = new Event('click');\nelement.dispatchEvent(event);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h3",{attrs:{id:"_9-element-scrollintoview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-element-scrollintoview"}},[e._v("#")]),e._v(" 9. Element.scrollIntoView()")]),e._v(" "),s("p",[e._v("Element.scrollIntoView方法滚动当前元素，进入浏览器的可见区域，类似\n于设置window.location.hash的效果。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("el.scrollIntoView(); // 等同于el.scrollIntoView(true)\nel.scrollIntoView(false);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("该方法可以接受一个布尔值作为参数。如果为true，表示元素的顶部与当前区域的可见部分的顶部对齐（前提是当前区域可滚动）；如果为false，表示元素的底部与当前区域的可见部分的尾部对齐（前提是当前区域可滚动）。如果没有提供该参数，默认为true。")]),e._v(" "),s("h3",{attrs:{id:"_10-element-getboundingclientrect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-element-getboundingclientrect"}},[e._v("#")]),e._v(" 10. Element.getBoundingClientRect()")]),e._v(" "),s("p",[e._v("Element.getBoundingClientRect方法返回一个对象，提供当前元素节点的大小、位置等信息，基本上就是 CSS 盒状模型的所有信息。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var rect = obj.getBoundingClientRect();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("上面代码中，getBoundingClientRect方法返回的rect对象，具有以下属性（全部为只读）。")]),e._v(" "),s("ul",[s("li",[e._v("x：元素左上角相对于视口的横坐标")]),e._v(" "),s("li",[e._v("y：元素左上角相对于视口的纵坐标")]),e._v(" "),s("li",[e._v("height：元素高度")]),e._v(" "),s("li",[e._v("width：元素宽度")]),e._v(" "),s("li",[e._v("left：元素左上角相对于视口的横坐标，与x属性相等")]),e._v(" "),s("li",[e._v("right：元素右边界相对于视口的横坐标（等于x + width）")]),e._v(" "),s("li",[e._v("top：元素顶部相对于视口的纵坐标，与y属性相等")]),e._v(" "),s("li",[e._v("bottom：元素底部相对于视口的纵坐标（等于y + height）")])]),e._v(" "),s("p",[e._v("由于元素相对于视口（viewport）的位置，会随着页面滚动变化，因此表示位置的四个属性值，都不是固定不变的。如果想得到绝对位置，可以将left属性加上window.scrollX，top属性加上window.scrollY。")]),e._v(" "),s("p",[e._v("注意，getBoundingClientRect方法的所有属性，都把边框（border属性）算作元素的一部分。也就是说，都是从边框外缘的各个点来计算。因此，width和height包括了元素本身 + padding + border。")]),e._v(" "),s("p",[e._v("另外，上面的这些属性，都是继承自原型的属性，Object.keys会返回一个空数组，这一点也需要注意。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var rect = document.body.getBoundingClientRect();\nObject.keys(rect) // []\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("上面代码中，rect对象没有自身属性，而Object.keys方法只返回对象自身的属性，所以返回了一个空数组。")]),e._v(" "),s("h3",{attrs:{id:"_11-element-getclientrects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-element-getclientrects"}},[e._v("#")]),e._v(" 11. Element.getClientRects()")]),e._v(" "),s("p",[e._v("Element.getClientRects方法返回一个类似数组的对象，里面是当前元素在页面上形成的所有矩形（所以方法名中的Rect用的是复数）。每个矩形都有bottom、height、left、right、top和width六个属性，表示它们相对于视口的四个坐标，以及本身的高度和宽度。")]),e._v(" "),s("p",[e._v("对于盒状元素（比如"),s("code",[e._v("<div>")]),e._v("和"),s("code",[e._v("<p>")]),e._v("），该方法返回的对象中只有该元素一个成员。对于行内元素（比如"),s("code",[e._v("<span>")]),e._v("、"),s("code",[e._v("<a>")]),e._v("、"),s("code",[e._v("<em>")]),e._v("），该方法返回的对象有多少个成员，取决于该元素在页面上占据多少行。这是它和Element.getBoundingClientRect()方法的主要区别，后者对于行内元素总是返回一个矩形。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<span id="inline">Hello World Hello World Hello World</span>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("上面代码是一个行内元素"),s("code",[e._v("<span>")]),e._v("，如果它在页面上占据三行，getClientRects方法返回的对象就有三个成员，如果它在页面上占据一行，getClientRects方法返回的对象就只有一个成员。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var el = document.getElementById('inline');\nel.getClientRects().length // 3\nel.getClientRects()[0].left // 8\nel.getClientRects()[0].right // 113.908203125\nel.getClientRects()[0].bottom // 31.200000762939453\nel.getClientRects()[0].height // 23.200000762939453\nel.getClientRects()[0].width // 105.908203125\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("这个方法主要用于判断行内元素是否换行，以及行内元素的每一行的位置偏移。")]),e._v(" "),s("p",[e._v("注意，如果行内元素包括换行符，那么该方法会把换行符考虑在内。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<span id="inline">\n  Hello World\n  Hello World\n  Hello World\n</span>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("上面代码中，"),s("code",[e._v("<span>")]),e._v("节点内部有三个换行符，即使 HTML 语言忽略换行符，将它们显示为一行，getClientRects()方法依然会返回三个成员。如果行宽设置得特别窄，上面的"),s("code",[e._v("<span>")]),e._v("元素显示为6行，那么就会返回六个成员。")]),e._v(" "),s("h3",{attrs:{id:"_12-element-insertadjacentelement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-element-insertadjacentelement"}},[e._v("#")]),e._v(" 12. Element.insertAdjacentElement()")]),e._v(" "),s("p",[e._v("Element.insertAdjacentElement方法在相对于当前元素的指定位置，插入一个新的节点。该方法返回被插入的节点，如果插入失败，返回null。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("element.insertAdjacentElement(position, element);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Element.insertAdjacentElement方法一共可以接受两个参数，第一个参数是一个字符串，表示插入的位置，第二个参数是将要插入的节点。第一个参数只可以取如下的值。")]),e._v(" "),s("ul",[s("li",[e._v("beforebegin：当前元素之前")]),e._v(" "),s("li",[e._v("afterbegin：当前元素内部的第一个子节点前面")]),e._v(" "),s("li",[e._v("beforeend：当前元素内部的最后一个子节点后面")]),e._v(" "),s("li",[e._v("afterend：当前元素之后")])]),e._v(" "),s("p",[e._v("注意，beforebegin和afterend这两个值，只在当前节点有父节点时才会生效。如果当前节点是由脚本创建的，没有父节点，那么插入会失败。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var p1 = document.createElement('p')\nvar p2 = document.createElement('p')\np1.insertAdjacentElement('afterend', p2) // null\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("上面代码中，p1没有父节点，所以插入p2到它后面就失败了。")]),e._v(" "),s("p",[e._v("如果插入的节点是一个文档里现有的节点，它会从原有位置删除，放置到新的位置。")]),e._v(" "),s("h3",{attrs:{id:"_13-element-insertadjacenthtml-element-insertadjacenttext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-element-insertadjacenthtml-element-insertadjacenttext"}},[e._v("#")]),e._v(" 13. Element.insertAdjacentHTML()，Element.insertAdjacentText()")]),e._v(" "),s("p",[e._v("Element.insertAdjacentHTML方法用于将一个 HTML 字符串，解析生成 DOM 结构，插入相对于当前节点的指定位置。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("element.insertAdjacentHTML(position, text);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("该方法接受两个参数，第一个是一个表示指定位置的字符串，第二个是待解析的 HTML 字符串。第一个参数只能设置下面四个值之一。")]),e._v(" "),s("ul",[s("li",[e._v("beforebegin：当前元素之前")]),e._v(" "),s("li",[e._v("afterbegin：当前元素内部的第一个子节点前面")]),e._v(" "),s("li",[e._v("beforeend：当前元素内部的最后一个子节点后面")]),e._v(" "),s("li",[e._v("afterend：当前元素之后")])]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// HTML 代码：<div id="one">one</div>\nvar d1 = document.getElementById(\'one\');\nd1.insertAdjacentHTML(\'afterend\', \'<div id="two">two</div>\');\n// 执行后的 HTML 代码：\n// <div id="one">one</div><div id="two">two</div>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("该方法只是在现有的 DOM 结构里面插入节点，这使得它的执行速度比innerHTML方法快得多。")]),e._v(" "),s("p",[e._v("注意，该方法不会转义 HTML 字符串，这导致它不能用来插入用户输入的内容，否则会有安全风险。")]),e._v(" "),s("p",[e._v("Element.insertAdjacentText方法在相对于当前节点的指定位置，插入一个文本节点，用法与Element.insertAdjacentHTML方法完全一致。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// HTML 代码：<div id=\"one\">one</div>\nvar d1 = document.getElementById('one');\nd1.insertAdjacentText('afterend', 'two');\n// 执行后的 HTML 代码：\n// <div id=\"one\">one</div>two\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h3",{attrs:{id:"_14-element-remove"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-element-remove"}},[e._v("#")]),e._v(" 14. Element.remove()")]),e._v(" "),s("p",[e._v("Element.remove方法继承自 ChildNode 接口，用于将当前元素节点从它的父节点移除。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var el = document.getElementById('mydiv');\nel.remove();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("上面代码将el节点从 DOM 树里面移除。")]),e._v(" "),s("h3",{attrs:{id:"_15-element-focus-element-blur"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-element-focus-element-blur"}},[e._v("#")]),e._v(" 15. Element.focus()，Element.blur()")]),e._v(" "),s("p",[e._v("Element.focus方法用于将当前页面的焦点，转移到指定元素上。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("document.getElementById('my-span').focus();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("该方法可以接受一个对象作为参数。参数对象的preventScroll属性是一个布尔值，指定是否将当前元素停留在原始位置，而不是滚动到可见区域。")]),e._v(" "),s("div",{staticClass:"language-dom line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function getFocus() {\n  document.getElementById('btn').focus({preventScroll:false});\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("上面代码会让btn元素获得焦点，并滚动到可见区域。")]),e._v(" "),s("p",[e._v("最后，从document.activeElement属性可以得到当前获得焦点的元素。")]),e._v(" "),s("p",[e._v("Element.blur方法用于将焦点从当前元素移除。")]),e._v(" "),s("h3",{attrs:{id:"_16-element-click"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-element-click"}},[e._v("#")]),e._v(" 16. Element.click()")]),e._v(" "),s("p",[e._v("Element.click方法用于在当前元素上模拟一次鼠标点击，相当于触发了click事件。")])])}),[],!1,null,null,null);t.default=a.exports}}]);