(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{440:function(s,e,a){"use strict";a.r(e);var t=a(17),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"cors-通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors-通信"}},[s._v("#")]),s._v(" CORS 通信")]),s._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("CORS 需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能。")]),s._v(" "),a("p",[s._v("整个 CORS 通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS 通信与普通的 AJAX 通信没有差别，代码完全一样。浏览器一旦发现 AJAX 请求跨域，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感知。因此，实现 CORS 通信的关键是服务器。只要服务器实现了 CORS 接口，就可以跨域通信。")]),s._v(" "),a("h2",{attrs:{id:"两种请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种请求"}},[s._v("#")]),s._v(" 两种请求")]),s._v(" "),a("p",[s._v("CORS 请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。")]),s._v(" "),a("p",[s._v("只要同时满足以下两大条件，就属于简单请求。")]),s._v(" "),a("p",[s._v("（1）请求方法是以下三种方法之一。")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("HEAD")]),s._v(" "),a("li",[s._v("GET")]),s._v(" "),a("li",[s._v("POST")])])]),s._v(" "),a("p",[s._v("（2）HTTP 的头信息不超出以下几种字段。")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("Accept")]),s._v(" "),a("li",[s._v("Accept-Language")]),s._v(" "),a("li",[s._v("Content-Language")]),s._v(" "),a("li",[s._v("Last-Event-ID")]),s._v(" "),a("li",[s._v("Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain")])])]),s._v(" "),a("p",[s._v("凡是不同时满足上面两个条件，就属于非简单请求。一句话，简单请求就是简单的 HTTP 方法与简单的 HTTP 头信息的结合。")]),s._v(" "),a("p",[s._v("这样划分的原因是，表单在历史上一直可以跨域发出请求。简单请求就是表单请求，浏览器沿袭了传统的处理方式，不把行为复杂化，否则开发者可能转而使用表单，规避 CORS 的限制。对于非简单请求，浏览器会采用新的处理方式。")]),s._v(" "),a("h2",{attrs:{id:"简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单请求"}},[s._v("#")]),s._v(" 简单请求")]),s._v(" "),a("h3",{attrs:{id:"_1-基本流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本流程"}},[s._v("#")]),s._v(" 1. 基本流程")]),s._v(" "),a("p",[s._v("对于简单请求，浏览器直接发出 CORS 请求。具体来说，就是在头信息之中，增加一个Origin字段。")]),s._v(" "),a("p",[s._v("下面是一个例子，浏览器发现这次跨域 AJAX 请求是简单请求，就自动在头信息之中，添加一个Origin字段。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /cors HTTP/1.1\nOrigin: http://api.bob.com\nHost: api.alice.com\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("上面的头信息中，Origin字段用来说明，本次请求来自哪个域（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。")]),s._v(" "),a("p",[s._v("如果Origin指定的源，不在许可范围内，服务器会返回一个正常的 HTTP 回应。浏览器发现，这个回应的头信息没有包含Access-Control-Allow-Origin字段（详见下文），就知道出错了，从而抛出一个错误，被XMLHttpRequest的onerror回调函数捕获。注意，这种错误无法通过状态码识别，因为 HTTP 回应的状态码有可能是200。")]),s._v(" "),a("p",[s._v("如果Origin指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Access-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Credentials: true\nAccess-Control-Expose-Headers: FooBar\nContent-Type: text/html; charset=utf-8\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面的头信息之中，有三个与 CORS 请求相关的字段，都以Access-Control-开头。")]),s._v(" "),a("h4",{attrs:{id:"_1-access-control-allow-origin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-access-control-allow-origin"}},[s._v("#")]),s._v(" （1）Access-Control-Allow-Origin")]),s._v(" "),a("p",[s._v("该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求。")]),s._v(" "),a("h4",{attrs:{id:"_2-access-control-allow-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-access-control-allow-credentials"}},[s._v("#")]),s._v(" （2）Access-Control-Allow-Credentials")]),s._v(" "),a("p",[s._v("该字段可选。它的值是一个布尔值，表示是否允许发送 Cookie。默认情况下，Cookie 不包括在 CORS 请求之中。设为true，即表示服务器明确许可，浏览器可以把 Cookie 包含在请求中，一起发给服务器。这个值也只能设为true，如果服务器不要浏览器发送 Cookie，不发送该字段即可。")]),s._v(" "),a("h4",{attrs:{id:"_3-access-control-expose-headers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-access-control-expose-headers"}},[s._v("#")]),s._v(" （3）Access-Control-Expose-Headers")]),s._v(" "),a("p",[s._v("该字段可选。CORS 请求时，XMLHttpRequest对象的getResponseHeader()方法只能拿到6个服务器返回的基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定。上面的例子指定，getResponseHeader('FooBar')可以返回FooBar字段的值。")]),s._v(" "),a("h3",{attrs:{id:"_2-withcredentials-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-withcredentials-属性"}},[s._v("#")]),s._v(" 2. withCredentials 属性")]),s._v(" "),a("p",[s._v("上面说到，CORS 请求默认不包含 Cookie 信息（以及 HTTP 认证信息等），这是为了降低 CSRF 攻击的风险。但是某些场合，服务器可能需要拿到 Cookie，这时需要服务器显式指定Access-Control-Allow-Credentials字段，告诉浏览器可以发送 Cookie。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Access-Control-Allow-Credentials: true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("同时，开发者必须在 AJAX 请求中打开withCredentials属性。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("否则，即使服务器要求发送 Cookie，浏览器也不会发送。或者，服务器要求设置 Cookie，浏览器也不会处理。")]),s._v(" "),a("p",[s._v("但是，有的浏览器默认将withCredentials属性设为true。这导致如果省略withCredentials设置，这些浏览器可能还是会一起发送 Cookie。这时，可以显式关闭withCredentials。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("xhr.withCredentials = false;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("需要注意的是，如果服务器要求浏览器发送 Cookie，Access-Control-Allow-Origin就不能设为星号，必须指定明确的、与请求网页一致的域名。同时，Cookie 依然遵循同源政策，只有用服务器域名设置的 Cookie 才会上传，其他域名的 Cookie 并不会上传，且（跨域）原网页代码中的document.cookie也无法读取服务器域名下的 Cookie。")]),s._v(" "),a("h2",{attrs:{id:"非简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求"}},[s._v("#")]),s._v(" 非简单请求")]),s._v(" "),a("h3",{attrs:{id:"_1-预检请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-预检请求"}},[s._v("#")]),s._v(" 1. 预检请求")]),s._v(" "),a("p",[s._v("非简单请求是那种对服务器提出特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json。")]),s._v(" "),a("p",[s._v("非简单请求的 CORS 请求，会在正式通信之前，增加一次 HTTP 查询请求，称为“预检”请求（preflight）。浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些 HTTP 方法和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。这是为了防止这些新增的请求，对传统的没有 CORS 支持的服务器形成压力，给服务器一个提前拒绝的机会，这样可以防止服务器收到大量DELETE和PUT请求，这些传统的表单不可能跨域发出的请求。")]),s._v(" "),a("p",[s._v("下面是一段浏览器的 JavaScript 脚本。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var url = 'http://api.alice.com/cors';\nvar xhr = new XMLHttpRequest();\nxhr.open('PUT', url, true);\nxhr.setRequestHeader('X-Custom-Header', 'value');\nxhr.send();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("上面代码中，HTTP 请求的方法是PUT，并且发送一个自定义头信息X-Custom-Header。")]),s._v(" "),a("p",[s._v("浏览器发现，这是一个非简单请求，就自动发出一个“预检”请求，要求服务器确认可以这样请求。下面是这个“预检”请求的 HTTP 头信息。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("OPTIONS /cors HTTP/1.1\nOrigin: http://api.bob.com\nAccess-Control-Request-Method: PUT\nAccess-Control-Request-Headers: X-Custom-Header\nHost: api.alice.com\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("“预检”请求用的请求方法是OPTIONS，表示这个请求是用来询问的。头信息里面，关键字段是Origin，表示请求来自哪个源。")]),s._v(" "),a("p",[s._v("除了Origin字段，“预检”请求的头信息包括两个特殊字段。")]),s._v(" "),a("h4",{attrs:{id:"_1-access-control-request-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-access-control-request-method"}},[s._v("#")]),s._v(" （1）Access-Control-Request-Method")]),s._v(" "),a("p",[s._v("该字段是必须的，用来列出浏览器的 CORS 请求会用到哪些 HTTP 方法，上例是PUT。")]),s._v(" "),a("h4",{attrs:{id:"_2-access-control-request-headers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-access-control-request-headers"}},[s._v("#")]),s._v(" （2）Access-Control-Request-Headers")]),s._v(" "),a("p",[s._v("该字段是一个逗号分隔的字符串，指定浏览器 CORS 请求会额外发送的头信息字段，上例是X-Custom-Header。")]),s._v(" "),a("h3",{attrs:{id:"_2-预检请求的回应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-预检请求的回应"}},[s._v("#")]),s._v(" 2. 预检请求的回应")]),s._v(" "),a("p",[s._v("服务器收到“预检”请求以后，检查了Origin、Access-Control-Request-Method和Access-Control-Request-Headers字段以后，确认允许跨源请求，就可以做出回应。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("HTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 01:15:39 GMT\nServer: Apache/2.0.61 (Unix)\nAccess-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nContent-Type: text/html; charset=utf-8\nContent-Encoding: gzip\nContent-Length: 0\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nContent-Type: text/plain\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("上面的 HTTP 回应中，关键的是Access-Control-Allow-Origin字段，表示"),a("code",[s._v("http://api.bob.com")]),s._v("可以请求数据。该字段也可以设为星号，表示同意任意跨源请求。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Access-Control-Allow-Origin: *\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果服务器否定了“预检”请求，会返回一个正常的 HTTP 回应，但是没有任何 CORS 相关的头信息字段，或者明确表示请求不符合条件。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("OPTIONS http://api.bob.com HTTP/1.1\nStatus: 200\nAccess-Control-Allow-Origin: https://notyourdomain.com\nAccess-Control-Allow-Method: POST\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面的服务器回应，Access-Control-Allow-Origin字段明确不包括发出请求的"),a("code",[s._v("http://api.bob.com")]),s._v("。")]),s._v(" "),a("p",[s._v("这时，浏览器就会认定，服务器不同意预检请求，因此触发一个错误，被XMLHttpRequest对象的onerror回调函数捕获。控制台会打印出如下的报错信息。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("XMLHttpRequest cannot load http://api.alice.com.\nOrigin http://api.bob.com is not allowed by Access-Control-Allow-Origin.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("服务器回应的其他 CORS 相关字段如下。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Access-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nAccess-Control-Allow-Credentials: true\nAccess-Control-Max-Age: 1728000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"_1-access-control-allow-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-access-control-allow-methods"}},[s._v("#")]),s._v(" （1）Access-Control-Allow-Methods")]),s._v(" "),a("p",[s._v("该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次“预检”请求。")]),s._v(" "),a("h4",{attrs:{id:"_2-access-control-allow-headers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-access-control-allow-headers"}},[s._v("#")]),s._v(" （2）Access-Control-Allow-Headers")]),s._v(" "),a("p",[s._v("如果浏览器请求包括Access-Control-Request-Headers字段，则Access-Control-Allow-Headers字段是必需的。它也是一个逗号分隔的字符串，表明服务器支持的所有头信息字段，不限于浏览器在“预检”中请求的字段。")]),s._v(" "),a("h4",{attrs:{id:"_3-access-control-allow-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-access-control-allow-credentials"}},[s._v("#")]),s._v(" （3）Access-Control-Allow-Credentials")]),s._v(" "),a("p",[s._v("该字段与简单请求时的含义相同。")]),s._v(" "),a("h4",{attrs:{id:"_4-access-control-max-age"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-access-control-max-age"}},[s._v("#")]),s._v(" （4）Access-Control-Max-Age")]),s._v(" "),a("p",[s._v("该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求。")]),s._v(" "),a("h3",{attrs:{id:"_3-浏览器的正常请求和回应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器的正常请求和回应"}},[s._v("#")]),s._v(" 3. 浏览器的正常请求和回应")]),s._v(" "),a("p",[s._v("一旦服务器通过了“预检”请求，以后每次浏览器正常的 CORS 请求，就都跟简单请求一样，会有一个Origin头信息字段。服务器的回应，也都会有一个Access-Control-Allow-Origin头信息字段。")]),s._v(" "),a("p",[s._v("下面是“预检”请求之后，浏览器的正常 CORS 请求。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("PUT /cors HTTP/1.1\nOrigin: http://api.bob.com\nHost: api.alice.com\nX-Custom-Header: value\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("上面头信息的Origin字段是浏览器自动添加的。")]),s._v(" "),a("p",[s._v("下面是服务器正常的回应。")]),s._v(" "),a("div",{staticClass:"language-ajax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Access-Control-Allow-Origin: http://api.bob.com\nContent-Type: text/html; charset=utf-8\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面头信息中，Access-Control-Allow-Origin字段是每次回应都必定包含的。")]),s._v(" "),a("h2",{attrs:{id:"与-jsonp-的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-jsonp-的比较"}},[s._v("#")]),s._v(" 与 JSONP 的比较")]),s._v(" "),a("p",[s._v("CORS 与 JSONP 的使用目的相同，但是比 JSONP 更强大。JSONP 只支持GET请求，CORS 支持所有类型的 HTTP 请求。JSONP 的优势在于支持老式浏览器，以及可以向不支持 CORS 的网站请求数据。")])])}),[],!1,null,null,null);e.default=n.exports}}]);